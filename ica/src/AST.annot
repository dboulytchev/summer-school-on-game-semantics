"AST.ml" 3 9 9 "AST.ml" 33 492 525
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
type(
  (('inh, 'syn) #t_tt -> 'inh -> t -> 'syn, < show : t -> GT.string >) GT.t
)
type(
  < show : t -> GT.string >
)
type(
  < show : t -> GT.string > -> t -> GT.string
)
type(
  t -> GT.string
)
type(
  t -> GT.string
)
type(
  GT.unit
)
type(
  show_t_t
)
type(
  (show_t_t -> GT.unit -> t -> GT.string, GT.unit) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (show_t_t -> GT.unit -> t -> GT.string, GT.unit) GT.t ->
  show_t_t -> GT.unit -> t -> GT.string
)
ident(
  ext_ref GT.transform
)
type(
  < show : t -> GT.string >
)
type(
  (('inh, 'syn) #t_tt as 'a) -> 'inh -> t -> 'syn
)
type(
  ('a -> 'inh -> t -> 'syn, GT.unit) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('a -> 'inh -> t -> 'syn, < show : t -> GT.string >) GT.t
)
ident(
  def t "AST.ml" 35 527 527 "AST.ml" 1 0 -1
)
type(
  < c_App : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Assn : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Binop : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              GT.string ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Const : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string;
    c_DelLoc : GT.unit ->
               (GT.unit, t, GT.string, <  >) GT.a ->
               GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_DelSema : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Deref : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_False_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Fix : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Grab : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_If : GT.unit ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Lam : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_New : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Par : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Release : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Sema : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Seq : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Skip : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_True_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Unop : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Var : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string;
    t_t : GT.unit -> t -> GT.string; .. > ->
  unit
)
type(
  unit
)
type(
  show_t_t
)
type(
  < c_App : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Assn : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Binop : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              GT.string ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Const : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string;
    c_DelLoc : GT.unit ->
               (GT.unit, t, GT.string, <  >) GT.a ->
               GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_DelSema : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Deref : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_False_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Fix : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Grab : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_If : GT.unit ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Lam : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_New : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Par : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Release : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Sema : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Seq : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Skip : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_True_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Unop : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Var : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string;
    t_t : GT.unit -> t -> GT.string; .. >
  as 'b
)
ident(
  int_ref this "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  show_t_t ref
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  show_t_t ref -> show_t_t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
type(
  '_c
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'b
)
type(
  'd
)
type(
  unit ref
)
type(
  unit
)
type(
  unit -> unit ref
)
ident(
  ext_ref Pervasives.ref
)
type(
  unit ref -> 'd
)
ident(
  ext_ref Obj.magic
)
type(
  'd
)
type(
  < c_App : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Assn : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Binop : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              GT.string ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Const : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string;
    c_DelLoc : GT.unit ->
               (GT.unit, t, GT.string, <  >) GT.a ->
               GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_DelSema : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Deref : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_False_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Fix : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Grab : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_If : GT.unit ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a ->
           (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Lam : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_New : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Par : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Release : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Sema : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Seq : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Skip : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_True_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Unop : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
    c_Var : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string;
    t_t : GT.unit -> t -> GT.string; .. > ->
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string
)
type(
  GT.string -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_e -> GT.string -> '_e;
    foldr : '_e -> GT.string -> '_e; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_f, '_g) _#GT.string_tt -> '_f -> GT.string -> '_g,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_e -> GT.string -> '_e;
     foldr : '_e -> GT.string -> '_e; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (< c_App : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Assn : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Binop : GT.unit ->
               (GT.unit, t, GT.string, <  >) GT.a ->
               GT.string ->
               (GT.unit, t, GT.string, <  >) GT.a ->
               (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Const : GT.unit ->
               (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string;
     c_DelLoc : GT.unit ->
                (GT.unit, t, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_DelSema : GT.unit ->
                 (GT.unit, t, GT.string, <  >) GT.a ->
                 GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Deref : GT.unit ->
               (GT.unit, t, GT.string, <  >) GT.a ->
               (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_False_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Fix : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Grab : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_If : GT.unit ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a ->
            (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Lam : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_New : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Par : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Release : GT.unit ->
                 (GT.unit, t, GT.string, <  >) GT.a ->
                 (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Sema : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Seq : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Skip : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_True_ : GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Unop : GT.unit ->
              (GT.unit, t, GT.string, <  >) GT.a ->
              GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string;
     c_Var : GT.unit ->
             (GT.unit, t, GT.string, <  >) GT.a -> GT.string -> GT.string;
     t_t : GT.unit -> t -> GT.string; .. >
   as 'h) ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_i -> GT.string -> '_i;
    foldr : '_i -> GT.string -> '_i; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_j, '_k) _#GT.string_tt -> '_j -> GT.string -> '_k,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_i -> GT.string -> '_i;
     foldr : '_i -> GT.string -> '_i; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_l -> GT.string -> '_l;
    foldr : '_l -> GT.string -> '_l; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_m, '_n) _#GT.string_tt -> '_m -> GT.string -> '_n,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_l -> GT.string -> '_l;
     foldr : '_l -> GT.string -> '_l; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_o -> GT.string -> '_o;
    foldr : '_o -> GT.string -> '_o; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_p, '_q) _#GT.string_tt -> '_p -> GT.string -> '_q,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_o -> GT.string -> '_o;
     foldr : '_o -> GT.string -> '_o; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h -> GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h -> GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h -> GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.int -> GT.string
)
type(
  GT.int -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.int
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.int -> string
)
type(
  < compare : GT.int -> GT.int -> GT.comparison;
    eq : GT.int -> GT.int -> GT.bool; foldl : '_r -> GT.int -> '_r;
    foldr : '_r -> GT.int -> '_r; gmap : GT.int -> GT.int;
    html : GT.int -> HTML.viewer; show : GT.int -> string >
)
type(
  (('_s, '_t) _#GT.int_tt -> '_s -> GT.int -> '_t,
   < compare : GT.int -> GT.int -> GT.comparison;
     eq : GT.int -> GT.int -> GT.bool; foldl : '_r -> GT.int -> '_r;
     foldr : '_r -> GT.int -> '_r; gmap : GT.int -> GT.int;
     html : GT.int -> HTML.viewer; show : GT.int -> string >)
  GT.t
)
ident(
  ext_ref GT.int
)
type(
  (GT.int -> string) -> unit -> GT.int -> string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  GT.int
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h -> GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_u -> GT.string -> '_u;
    foldr : '_u -> GT.string -> '_u; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_v, '_w) _#GT.string_tt -> '_v -> GT.string -> '_w,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_u -> GT.string -> '_u;
     foldr : '_u -> GT.string -> '_u; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_x -> GT.string -> '_x;
    foldr : '_x -> GT.string -> '_x; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_y, '_z) _#GT.string_tt -> '_y -> GT.string -> '_z,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_x -> GT.string -> '_x;
     foldr : '_x -> GT.string -> '_x; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool;
    foldl : '_a1 -> GT.string -> '_a1; foldr : '_a1 -> GT.string -> '_a1;
    gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
    show : GT.string -> GT.string >
)
type(
  (('_b1, '_c1) _#GT.string_tt -> '_b1 -> GT.string -> '_c1,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool;
     foldl : '_a1 -> GT.string -> '_a1; foldr : '_a1 -> GT.string -> '_a1;
     gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
     show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool;
    foldl : '_d1 -> GT.string -> '_d1; foldr : '_d1 -> GT.string -> '_d1;
    gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
    show : GT.string -> GT.string >
)
type(
  (('_e1, '_f1) _#GT.string_tt -> '_e1 -> GT.string -> '_f1,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool;
     foldl : '_d1 -> GT.string -> '_d1; foldr : '_d1 -> GT.string -> '_d1;
     gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
     show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h ->
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool;
    foldl : '_g1 -> GT.string -> '_g1; foldr : '_g1 -> GT.string -> '_g1;
    gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
    show : GT.string -> GT.string >
)
type(
  (('_h1, '_i1) _#GT.string_tt -> '_h1 -> GT.string -> '_i1,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool;
     foldl : '_g1 -> GT.string -> '_g1; foldr : '_g1 -> GT.string -> '_g1;
     gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
     show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (GT.unit, t, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'h
)
type(
  'j1
)
type(
  < c_App : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Assn : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Binop : 'inh0 ->
              ('inh0, t, 'syn0, <  >) GT.a ->
              GT.string ->
              ('inh0, t, 'syn0, <  >) GT.a ->
              ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Const : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> GT.int -> 'syn0;
    c_DelLoc : 'inh0 ->
               ('inh0, t, 'syn0, <  >) GT.a ->
               GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_DelSema : 'inh0 ->
                ('inh0, t, 'syn0, <  >) GT.a ->
                GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Deref : 'inh0 ->
              ('inh0, t, 'syn0, <  >) GT.a ->
              ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_False_ : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Fix : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Grab : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_If : 'inh0 ->
           ('inh0, t, 'syn0, <  >) GT.a ->
           ('inh0, t, 'syn0, <  >) GT.a ->
           ('inh0, t, 'syn0, <  >) GT.a ->
           ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Lam : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_New : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Par : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Release : 'inh0 ->
                ('inh0, t, 'syn0, <  >) GT.a ->
                ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Sema : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Seq : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Skip : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_True_ : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Unop : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Var : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> GT.string -> 'syn0;
    t_t : 'inh0 -> t -> 'syn0; .. > ->
  'inh0 -> t -> 'syn0
)
type(
  'inh0 -> t -> 'syn0
)
type(
  'inh0 -> t -> 'syn0
)
type(
  < c_App : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Assn : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Binop : 'inh0 ->
              ('inh0, t, 'syn0, <  >) GT.a ->
              GT.string ->
              ('inh0, t, 'syn0, <  >) GT.a ->
              ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Const : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> GT.int -> 'syn0;
    c_DelLoc : 'inh0 ->
               ('inh0, t, 'syn0, <  >) GT.a ->
               GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_DelSema : 'inh0 ->
                ('inh0, t, 'syn0, <  >) GT.a ->
                GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Deref : 'inh0 ->
              ('inh0, t, 'syn0, <  >) GT.a ->
              ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_False_ : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Fix : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Grab : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_If : 'inh0 ->
           ('inh0, t, 'syn0, <  >) GT.a ->
           ('inh0, t, 'syn0, <  >) GT.a ->
           ('inh0, t, 'syn0, <  >) GT.a ->
           ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Lam : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_New : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Par : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Release : 'inh0 ->
                ('inh0, t, 'syn0, <  >) GT.a ->
                ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Sema : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Seq : 'inh0 ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a ->
            ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Skip : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_True_ : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Unop : 'inh0 ->
             ('inh0, t, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, t, 'syn0, <  >) GT.a -> 'syn0;
    c_Var : 'inh0 -> ('inh0, t, 'syn0, <  >) GT.a -> GT.string -> 'syn0;
    t_t : 'inh0 -> t -> 'syn0; .. >
  as 'k1
)
ident(
  int_ref this "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('k1 -> 'inh0 -> t -> 'syn0, GT.unit) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('k1 -> 'inh0 -> t -> 'syn0, GT.unit) GT.t -> 'k1 -> 'inh0 -> t -> 'syn0
)
ident(
  ext_ref GT.transform
)
type(
  'k1
)
type(
  (('inh1, 'syn1) #t_tt -> 'inh1 -> t -> 'syn1, GT.unit) GT.t
)
type(
  ((('inh1, 'syn1) #t_tt as 'l1) -> 'inh1 -> t -> 'syn1, GT.unit) GT.t
)
type(
  GT.unit
)
type(
  'l1 -> 'inh1 -> t -> 'syn1
)
ident(
  int_ref t_gcata "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  < c_App : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Assn : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a ->
             GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Binop : 'm1 ->
              ('m1, t, 'n1, <  >) GT.a ->
              GT.string ->
              ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Const : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> GT.int -> 'n1;
    c_DelLoc : 'm1 ->
               ('m1, t, 'n1, <  >) GT.a ->
               GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_DelSema : 'm1 ->
                ('m1, t, 'n1, <  >) GT.a ->
                GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Deref : 'm1 ->
              ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_False_ : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Fix : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Grab : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_If : 'm1 ->
           ('m1, t, 'n1, <  >) GT.a ->
           ('m1, t, 'n1, <  >) GT.a ->
           ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Lam : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_New : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Par : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Release : 'm1 ->
                ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Sema : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a ->
             GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Seq : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Skip : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_True_ : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Unop : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a ->
             GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Var : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> GT.string -> 'n1; .. > ->
  'm1 -> t -> 'n1
)
type(
  'm1 -> t -> 'n1
)
type(
  t -> 'n1
)
type(
  'n1
)
type(
  'n1
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  < c_App : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Assn : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a ->
             GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Binop : 'm1 ->
              ('m1, t, 'n1, <  >) GT.a ->
              GT.string ->
              ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Const : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> GT.int -> 'n1;
    c_DelLoc : 'm1 ->
               ('m1, t, 'n1, <  >) GT.a ->
               GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_DelSema : 'm1 ->
                ('m1, t, 'n1, <  >) GT.a ->
                GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Deref : 'm1 ->
              ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_False_ : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Fix : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Grab : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_If : 'm1 ->
           ('m1, t, 'n1, <  >) GT.a ->
           ('m1, t, 'n1, <  >) GT.a ->
           ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Lam : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_New : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Par : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Release : 'm1 ->
                ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Sema : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a ->
             GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Seq : 'm1 ->
            ('m1, t, 'n1, <  >) GT.a ->
            ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Skip : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_True_ : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Unop : 'm1 ->
             ('m1, t, 'n1, <  >) GT.a ->
             GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1;
    c_Var : 'm1 -> ('m1, t, 'n1, <  >) GT.a -> GT.string -> 'n1; .. >
  as 'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a ->
  ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a ->
  ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a ->
  ('m1, t, 'n1, <  >) GT.a ->
  ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  GT.int
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> GT.int -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a ->
  GT.string -> ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a ->
  ('m1, t, 'n1, <  >) GT.a -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 ->
  ('m1, t, 'n1, <  >) GT.a -> GT.string -> ('m1, t, 'n1, <  >) GT.a -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'n1
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1, t, 'n1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  int_ref self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('m1 -> t -> 'n1) -> t -> <  > -> ('m1, t, 'n1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'm1
)
ident(
  int_ref inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> ('m1, t, 'n1, <  >) GT.a -> GT.string -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  GT.int
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p2 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  t
)
ident(
  def p1 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  int_ref subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  <  >
)
type(
  <  >
)
type(
  'm1 -> t -> 'n1
)
type(
  'o1
)
ident(
  int_ref trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'o1 -> 'm1 -> t -> 'n1
)
ident(
  int_ref t_gcata "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  <  >
)
ident(
  def tpo "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1 -> t -> 'n1
)
ident(
  def self "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  t
)
ident(
  def subj "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'm1
)
ident(
  def inh "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'o1
)
ident(
  def trans "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  'o1 -> 'm1 -> t -> 'n1
)
ident(
  def t_gcata "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  ('l1 -> 'inh1 -> t -> 'syn1, GT.unit) GT.t
)
ident(
  def t "AST.ml" 3 9 9 "AST.ml" 1 0 -1
)
"AST.ml" 38 552 560 "AST.ml" 38 552 568
type(
  string list
)
ident(
  def keywords "AST.ml" 42 697 701 "AST.ml" 83 2089 2094
)
"AST.ml" 39 573 579 "AST.ml" 39 573 584
type(
  string
)
"AST.ml" 39 573 586 "AST.ml" 39 573 591
type(
  string
)
"AST.ml" 39 573 593 "AST.ml" 39 573 597
type(
  string
)
"AST.ml" 39 573 599 "AST.ml" 39 573 610
type(
  string
)
"AST.ml" 39 573 612 "AST.ml" 39 573 616
type(
  string
)
"AST.ml" 39 573 618 "AST.ml" 39 573 624
type(
  string
)
"AST.ml" 39 573 626 "AST.ml" 39 573 632
type(
  string
)
"AST.ml" 39 573 634 "AST.ml" 39 573 638
type(
  string
)
"AST.ml" 39 573 640 "AST.ml" 39 573 645
type(
  string
)
"AST.ml" 39 573 647 "AST.ml" 39 573 653
type(
  string
)
"AST.ml" 39 573 655 "AST.ml" 39 573 664
type(
  string
)
"AST.ml" 39 573 666 "AST.ml" 39 573 672
type(
  string
)
"AST.ml" 39 573 674 "AST.ml" 39 573 681
type(
  string
)
"AST.ml" 39 573 683 "AST.ml" 39 573 689
type(
  string
)
"AST.ml" 38 552 571 "AST.ml" 40 690 695
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
type(
  string list
)
"AST.ml" 42 697 705 "AST.ml" 42 697 706
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  def r "AST.ml" 44 735 739 "AST.ml" 83 2089 2094
)
"AST.ml" 42 697 709 "AST.ml" 42 697 733
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  ext_ref Ostap.Matcher.Token.repr
)
"AST.ml" 44 735 743 "AST.ml" 44 735 753
type(
  String.t -> bool
)
ident(
  def is_keyword "AST.ml" 49 904 908 "AST.ml" 83 2089 2094
)
"AST.ml" 45 757 778 "AST.ml" 45 757 795
call(
  stack
)
"AST.ml" 46 799 809 "AST.ml" 46 799 810
type(
  S.t
)
ident(
  def s "AST.ml" 47 871 877 "AST.ml" 47 871 897
)
"AST.ml" 46 799 813 "AST.ml" 46 799 827
type(
  (S.t -> S.elt -> S.t) -> S.t -> S.elt list -> S.t
)
ident(
  ext_ref List.fold_left
)
"AST.ml" 46 799 833 "AST.ml" 46 799 834
type(
  S.t
)
ident(
  def s "AST.ml" 46 799 835 "AST.ml" 46 799 849
)
"AST.ml" 46 799 835 "AST.ml" 46 799 836
type(
  S.elt
)
ident(
  def k "AST.ml" 46 799 840 "AST.ml" 46 799 849
)
"AST.ml" 46 799 840 "AST.ml" 46 799 845
type(
  S.elt -> S.t -> S.t
)
ident(
  ext_ref S.add
)
"AST.ml" 46 799 846 "AST.ml" 46 799 847
type(
  S.elt
)
ident(
  int_ref k "AST.ml" 46 799 835 "AST.ml" 46 799 836
)
"AST.ml" 46 799 848 "AST.ml" 46 799 849
type(
  S.t
)
ident(
  int_ref s "AST.ml" 46 799 833 "AST.ml" 46 799 834
)
"AST.ml" 46 799 840 "AST.ml" 46 799 849
call(
  tail
)
type(
  S.t
)
"AST.ml" 46 799 835 "AST.ml" 46 799 849
type(
  S.elt -> S.t
)
"AST.ml" 46 799 828 "AST.ml" 46 799 850
type(
  S.t -> S.elt -> S.t
)
"AST.ml" 46 799 851 "AST.ml" 46 799 858
type(
  S.t
)
ident(
  ext_ref S.empty
)
"AST.ml" 46 799 859 "AST.ml" 46 799 867
type(
  S.elt list
)
ident(
  int_ref keywords "AST.ml" 38 552 560 "AST.ml" 38 552 568
)
"AST.ml" 46 799 813 "AST.ml" 46 799 867
call(
  stack
)
type(
  S.t
)
"AST.ml" 47 871 882 "AST.ml" 47 871 883
type(
  String.t
)
ident(
  def i "AST.ml" 47 871 887 "AST.ml" 47 871 896
)
"AST.ml" 47 871 887 "AST.ml" 47 871 892
type(
  String.t -> S.t -> bool
)
ident(
  ext_ref S.mem
)
"AST.ml" 47 871 893 "AST.ml" 47 871 894
type(
  String.t
)
ident(
  int_ref i "AST.ml" 47 871 882 "AST.ml" 47 871 883
)
"AST.ml" 47 871 895 "AST.ml" 47 871 896
type(
  S.t
)
ident(
  int_ref s "AST.ml" 46 799 809 "AST.ml" 46 799 810
)
"AST.ml" 47 871 887 "AST.ml" 47 871 896
call(
  tail
)
type(
  bool
)
"AST.ml" 47 871 877 "AST.ml" 47 871 897
type(
  String.t -> bool
)
"AST.ml" 46 799 805 "AST.ml" 47 871 897
type(
  String.t -> bool
)
"AST.ml" 45 757 763 "AST.ml" 47 871 897
type(
  String.t -> bool
)
"AST.ml" 50 916 931 "AST.ml" 50 916 933
type(
  Ostap.Matcher.Token.t
)
ident(
  def x "AST.ml" 50 916 942 "AST.ml" 50 916 964
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def x "AST.ml" 50 916 969 "AST.ml" 50 916 972
)
"AST.ml" 50 916 933 "AST.ml" 50 916 938
call(
  tail
)
type(
  (< getIDENT : ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.result;
     .. >
   as 'a, Ostap.Matcher.Token.t, 'b)
  Ostap.Combinators.parse
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "AST.ml" 50 916 933 "AST.ml" 50 916 938
)
type(
  'a
)
ident(
  def _ostap_stream "AST.ml" 50 916 933 "AST.ml" 50 916 938
)
"AST.ml" 50 916 942 "AST.ml" 50 916 945
type(
  bool -> bool
)
ident(
  ext_ref Pervasives.not
)
"AST.ml" 50 916 947 "AST.ml" 50 916 957
type(
  String.t -> bool
)
ident(
  int_ref is_keyword "AST.ml" 44 735 743 "AST.ml" 44 735 753
)
"AST.ml" 50 916 959 "AST.ml" 50 916 960
type(
  Ostap.Matcher.Token.t -> String.t
)
ident(
  int_ref r "AST.ml" 42 697 705 "AST.ml" 42 697 706
)
"AST.ml" 50 916 961 "AST.ml" 50 916 962
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref x "AST.ml" 50 916 931 "AST.ml" 50 916 933
)
"AST.ml" 50 916 958 "AST.ml" 50 916 963
call(
  stack
)
type(
  String.t
)
"AST.ml" 50 916 946 "AST.ml" 50 916 964
call(
  stack
)
type(
  bool
)
"AST.ml" 50 916 942 "AST.ml" 50 916 964
type(
  bool
)
"AST.ml" 50 916 969 "AST.ml" 50 916 970
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  int_ref r "AST.ml" 42 697 705 "AST.ml" 42 697 706
)
"AST.ml" 50 916 971 "AST.ml" 50 916 972
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref x "AST.ml" 50 916 931 "AST.ml" 50 916 933
)
"AST.ml" 50 916 969 "AST.ml" 50 916 972
call(
  tail
)
type(
  string
)
"AST.ml" 50 916 931 "AST.ml" 50 916 973
call(
  stack
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.parse
)
type(
  (Ostap.Matcher.Token.t -> 'b) option
)
type(
  Ostap.Matcher.Token.t -> bool
)
type(
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.parse ->
  (Ostap.Matcher.Token.t -> bool) ->
  (Ostap.Matcher.Token.t -> 'b) option ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.guard
)
type(
  Ostap.Matcher.Token.t -> string
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "AST.ml" 50 916 969 "AST.ml" 50 916 972
)
type(
  (Ostap.Matcher.Token.t -> string) ->
  ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.parse ->
  ('a, string, 'b) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 50 916 922 "AST.ml" 50 916 973
call(
  tail
)
type(
  'a -> ('a, string, 'b) Ostap.Combinators.result
)
type(
  ('a, string, 'b) Ostap.Combinators.result
)
type(
  'a
)
ident(
  int_ref _ostap_stream "AST.ml" 50 916 922 "AST.ml" 50 916 973
)
type(
  'a
)
ident(
  def _ostap_stream "AST.ml" 50 916 922 "AST.ml" 50 916 973
)
"AST.ml" 51 975 990 "AST.ml" 51 975 992
type(
  Ostap.Matcher.Token.t
)
ident(
  def x "AST.ml" 51 975 1001 "AST.ml" 51 975 1020
)
"AST.ml" 51 975 992 "AST.ml" 51 975 999
call(
  tail
)
type(
  (< getLITERAL : ('c, Ostap.Matcher.Token.t, 'd) Ostap.Combinators.result;
     .. >
   as 'c, Ostap.Matcher.Token.t, 'd)
  Ostap.Combinators.parse
)
type(
  ('c, Ostap.Matcher.Token.t, 'd) Ostap.Combinators.result
)
type(
  'c
)
ident(
  int_ref _ostap_stream "AST.ml" 51 975 992 "AST.ml" 51 975 999
)
type(
  'c
)
ident(
  def _ostap_stream "AST.ml" 51 975 992 "AST.ml" 51 975 999
)
"AST.ml" 51 975 1001 "AST.ml" 51 975 1014
type(
  string -> int
)
ident(
  ext_ref Pervasives.int_of_string
)
"AST.ml" 51 975 1016 "AST.ml" 51 975 1017
type(
  Ostap.Matcher.Token.t -> string
)
ident(
  int_ref r "AST.ml" 42 697 705 "AST.ml" 42 697 706
)
"AST.ml" 51 975 1018 "AST.ml" 51 975 1019
type(
  Ostap.Matcher.Token.t
)
ident(
  int_ref x "AST.ml" 51 975 990 "AST.ml" 51 975 992
)
"AST.ml" 51 975 1015 "AST.ml" 51 975 1020
call(
  stack
)
type(
  string
)
"AST.ml" 51 975 1001 "AST.ml" 51 975 1020
type(
  int
)
"AST.ml" 51 975 990 "AST.ml" 51 975 1021
type(
  Ostap.Matcher.Token.t -> int
)
type(
  Ostap.Matcher.Token.t
)
ident(
  def _0 "AST.ml" 51 975 1001 "AST.ml" 51 975 1020
)
type(
  (Ostap.Matcher.Token.t -> int) ->
  ('c, Ostap.Matcher.Token.t, 'd) Ostap.Combinators.parse ->
  ('c, int, 'd) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 51 975 981 "AST.ml" 51 975 1021
call(
  tail
)
type(
  'c -> ('c, int, 'd) Ostap.Combinators.result
)
type(
  ('c, int, 'd) Ostap.Combinators.result
)
type(
  'c
)
ident(
  int_ref _ostap_stream "AST.ml" 51 975 981 "AST.ml" 51 975 1021
)
type(
  'c
)
ident(
  def _ostap_stream "AST.ml" 51 975 981 "AST.ml" 51 975 1021
)
"AST.ml" 50 916 922 "AST.ml" 51 975 1021
type(
  'c -> ('c, int, 'd) Ostap.Combinators.result
)
ident(
  def literal "AST.ml" 49 904 908 "AST.ml" 83 2089 2094
)
type(
  'a -> ('a, string, 'b) Ostap.Combinators.result
)
ident(
  def ident "AST.ml" 49 904 908 "AST.ml" 83 2089 2094
)
"AST.ml" 54 1030 1042 "AST.ml" 54 1030 1043
type(
  string
)
"AST.ml" 55 1047 1057 "AST.ml" 55 1047 1061
type(
  string ->
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
"AST.ml" 55 1047 1064 "AST.ml" 55 1047 1089
type(
  Ostap.Matcher.Skip.t list ->
  string ->
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
ident(
  ext_ref Ostap.Matcher.Skip.create
)
"AST.ml" 56 1092 1111 "AST.ml" 56 1092 1141
type(
  string -> Ostap.Matcher.Skip.t
)
ident(
  ext_ref Ostap.Matcher.Skip.whitespaces
)
"AST.ml" 56 1092 1142 "AST.ml" 56 1092 1151
type(
  string
)
"AST.ml" 56 1092 1111 "AST.ml" 56 1092 1151
call(
  stack
)
type(
  Ostap.Matcher.Skip.t
)
"AST.ml" 57 1154 1173 "AST.ml" 57 1154 1205
type(
  string -> string -> Ostap.Matcher.Skip.t
)
ident(
  ext_ref Ostap.Matcher.Skip.nestedComment
)
"AST.ml" 57 1154 1206 "AST.ml" 57 1154 1210
type(
  string
)
"AST.ml" 57 1154 1211 "AST.ml" 57 1154 1215
type(
  string
)
"AST.ml" 57 1154 1173 "AST.ml" 57 1154 1215
call(
  stack
)
type(
  Ostap.Matcher.Skip.t
)
"AST.ml" 58 1217 1236 "AST.ml" 58 1217 1266
type(
  string -> Ostap.Matcher.Skip.t
)
ident(
  ext_ref Ostap.Matcher.Skip.lineComment
)
"AST.ml" 58 1217 1267 "AST.ml" 58 1217 1271
type(
  string
)
"AST.ml" 58 1217 1236 "AST.ml" 58 1217 1271
call(
  stack
)
type(
  Ostap.Matcher.Skip.t
)
"AST.ml" 55 1047 1090 "AST.ml" 59 1272 1290
type(
  Ostap.Matcher.Skip.t list
)
type(
  Ostap.Matcher.Skip.t list
)
type(
  Ostap.Matcher.Skip.t list
)
type(
  Ostap.Matcher.Skip.t list
)
"AST.ml" 55 1047 1064 "AST.ml" 59 1272 1290
call(
  stack
)
type(
  string ->
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
"AST.ml" 62 1302 1312 "AST.ml" 62 1302 1317
type(
  Re_str.regexp
)
"AST.ml" 62 1302 1322 "AST.ml" 62 1302 1335
type(
  string -> Re_str.regexp
)
ident(
  ext_ref Re_str.regexp
)
"AST.ml" 62 1302 1336 "AST.ml" 62 1302 1367
type(
  string
)
"AST.ml" 62 1302 1322 "AST.ml" 62 1302 1367
call(
  stack
)
type(
  Re_str.regexp
)
"AST.ml" 63 1372 1382 "AST.ml" 63 1372 1389
type(
  Re_str.regexp
)
"AST.ml" 63 1372 1392 "AST.ml" 63 1372 1405
type(
  string -> Re_str.regexp
)
ident(
  ext_ref Re_str.regexp
)
"AST.ml" 63 1372 1406 "AST.ml" 63 1372 1416
type(
  string
)
"AST.ml" 63 1372 1392 "AST.ml" 63 1372 1416
call(
  stack
)
type(
  Re_str.regexp
)
"AST.ml" 64 1420 1434 "AST.ml" 64 1420 1438
type(
  < col : int; coord : Ostap.Msg.Coord.t;
    get : string ->
          Re_str.regexp ->
          ('e, Ostap.Matcher.Token.t, Ostap.Reason.t)
          Ostap.Combinators.result;
    getEOF : ('e, Ostap.Matcher.Token.t, Ostap.Reason.t)
             Ostap.Combinators.result;
    getIDENT : ('e, Ostap.Matcher.Token.t, Ostap.Reason.t)
               Ostap.Combinators.result;
    getLITERAL : ('e, Ostap.Matcher.Token.t, Ostap.Reason.t)
                 Ostap.Combinators.result;
    line : int; loc : Ostap.Msg.Locator.t;
    look : string ->
           ('e, Ostap.Matcher.Token.t, Ostap.Reason.t)
           Ostap.Combinators.result;
    pos : int; prefix : int -> string;
    regexp : string ->
             string ->
             ('e, Ostap.Matcher.Token.t, Ostap.Reason.t)
             Ostap.Combinators.result;
    skip : int ->
           Ostap.Msg.Coord.t ->
           [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ];
    .. >
  as 'e
)
"AST.ml" 65 1440 1472 "AST.ml" 65 1440 1473
type(
  string
)
ident(
  int_ref s "AST.ml" 54 1030 1042 "AST.ml" 54 1030 1043
)
"AST.ml" 66 1475 1495 "AST.ml" 66 1475 1496
type(
  int
)
ident(
  def p "AST.ml" 66 1475 1497 "AST.ml" 66 1475 1519
)
"AST.ml" 66 1475 1497 "AST.ml" 66 1475 1502
type(
  Ostap.Msg.Coord.t
)
ident(
  def coord "AST.ml" 66 1475 1505 "AST.ml" 66 1475 1519
)
"AST.ml" 66 1475 1505 "AST.ml" 66 1475 1509
type(
  string ->
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
ident(
  int_ref skip "AST.ml" 55 1047 1057 "AST.ml" 55 1047 1061
)
"AST.ml" 66 1475 1510 "AST.ml" 66 1475 1511
type(
  string
)
ident(
  int_ref s "AST.ml" 54 1030 1042 "AST.ml" 54 1030 1043
)
"AST.ml" 66 1475 1512 "AST.ml" 66 1475 1513
type(
  int
)
ident(
  int_ref p "AST.ml" 66 1475 1495 "AST.ml" 66 1475 1496
)
"AST.ml" 66 1475 1514 "AST.ml" 66 1475 1519
type(
  Ostap.Msg.Coord.t
)
ident(
  int_ref coord "AST.ml" 66 1475 1497 "AST.ml" 66 1475 1502
)
"AST.ml" 66 1475 1505 "AST.ml" 66 1475 1519
call(
  tail
)
type(
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
"AST.ml" 66 1475 1497 "AST.ml" 66 1475 1519
type(
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
"AST.ml" 66 1475 1495 "AST.ml" 66 1475 1519
type(
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
type(
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
"AST.ml" 66 1475 1483 "AST.ml" 66 1475 1519
type(
  'e ->
  int ->
  Ostap.Msg.Coord.t ->
  [ `Failed of Ostap.Msg.t | `Skipped of int * Ostap.Msg.Coord.t ]
)
"AST.ml" 67 1520 1550 "AST.ml" 67 1520 1554
type(
  'e
)
ident(
  int_ref self "AST.ml" 64 1420 1434 "AST.ml" 64 1420 1438
)
"AST.ml" 67 1520 1550 "AST.ml" 67 1520 1558
call(
  tail
)
type(
  string ->
  Re_str.regexp ->
  ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
"AST.ml" 67 1520 1559 "AST.ml" 67 1520 1571
type(
  string
)
"AST.ml" 67 1520 1572 "AST.ml" 67 1520 1577
type(
  Re_str.regexp
)
ident(
  int_ref ident "AST.ml" 62 1302 1312 "AST.ml" 62 1302 1317
)
"AST.ml" 67 1520 1550 "AST.ml" 67 1520 1577
type(
  ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
type(
  ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
"AST.ml" 67 1520 1528 "AST.ml" 67 1520 1577
type(
  'e -> ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
"AST.ml" 68 1578 1608 "AST.ml" 68 1578 1612
type(
  'e
)
ident(
  int_ref self "AST.ml" 64 1420 1434 "AST.ml" 64 1420 1438
)
"AST.ml" 68 1578 1608 "AST.ml" 68 1578 1616
call(
  tail
)
type(
  string ->
  Re_str.regexp ->
  ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
"AST.ml" 68 1578 1617 "AST.ml" 68 1578 1626
type(
  string
)
"AST.ml" 68 1578 1630 "AST.ml" 68 1578 1637
type(
  Re_str.regexp
)
ident(
  int_ref literal "AST.ml" 63 1372 1382 "AST.ml" 63 1372 1389
)
"AST.ml" 68 1578 1608 "AST.ml" 68 1578 1637
type(
  ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
type(
  ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
"AST.ml" 68 1578 1586 "AST.ml" 68 1578 1637
type(
  'e -> ('e, Ostap.Matcher.Token.t, Ostap.Reason.t) Ostap.Combinators.result
)
"AST.ml" 73 1689 1697 "AST.ml" 73 1689 1707
type(
  (t ->
   ('f, 'g,
    < retrieve : [> `First of int ] ->
                 [> `Desc ] ->
                 (Ostap.Msg.Locator.t *
                  [< `Comment of string * 'h | `Msg of Ostap.Msg.t ] list)
                 list;
      .. >)
   Ostap.Combinators.result) ->
  string -> ('g, Ostap.Msg.t) Checked.t
)
ident(
  def fromString "AST.ml" 81 2032 2087 "AST.ml" 83 2089 2094
)
"AST.ml" 73 1689 1708 "AST.ml" 73 1689 1709
type(
  t ->
  ('f, 'g,
   < retrieve : [> `First of int ] ->
                [> `Desc ] ->
                (Ostap.Msg.Locator.t *
                 [< `Comment of string * 'h | `Msg of Ostap.Msg.t ] list)
                list;
     .. >
   as 'i)
  Ostap.Combinators.result
)
ident(
  def p "AST.ml" 73 1689 1710 "AST.ml" 81 2032 2087
)
"AST.ml" 73 1689 1710 "AST.ml" 73 1689 1711
type(
  string
)
ident(
  def s "AST.ml" 74 1714 1720 "AST.ml" 81 2032 2087
)
"AST.ml" 75 1724 1732 "AST.ml" 75 1724 1756
type(
  ('f, 'g, 'i) Ostap.Combinators.result ->
  ('g -> ('g, Ostap.Msg.t) Checked.t) ->
  ('i option -> ('g, Ostap.Msg.t) Checked.t) -> ('g, Ostap.Msg.t) Checked.t
)
ident(
  ext_ref Ostap.Combinators.unwrap
)
"AST.ml" 75 1724 1758 "AST.ml" 75 1724 1759
type(
  t -> ('f, 'g, 'i) Ostap.Combinators.result
)
ident(
  int_ref p "AST.ml" 73 1689 1708 "AST.ml" 73 1689 1709
)
"AST.ml" 75 1724 1761 "AST.ml" 75 1724 1766
type(
  string -> t
)
"AST.ml" 75 1724 1767 "AST.ml" 75 1724 1768
type(
  string
)
ident(
  int_ref s "AST.ml" 73 1689 1710 "AST.ml" 73 1689 1711
)
"AST.ml" 75 1724 1760 "AST.ml" 75 1724 1769
call(
  stack
)
type(
  t
)
"AST.ml" 75 1724 1757 "AST.ml" 75 1724 1770
call(
  stack
)
type(
  ('f, 'g, 'i) Ostap.Combinators.result
)
"AST.ml" 75 1724 1776 "AST.ml" 75 1724 1777
type(
  'g
)
ident(
  def x "AST.ml" 75 1724 1781 "AST.ml" 75 1724 1793
)
"AST.ml" 75 1724 1792 "AST.ml" 75 1724 1793
type(
  'g
)
ident(
  int_ref x "AST.ml" 75 1724 1776 "AST.ml" 75 1724 1777
)
"AST.ml" 75 1724 1781 "AST.ml" 75 1724 1793
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 75 1724 1771 "AST.ml" 75 1724 1794
type(
  'g -> ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 76 1796 1817 "AST.ml" 76 1796 1820
type(
  'i
)
ident(
  def err "AST.ml" 77 1825 1838 "AST.ml" 79 1990 2019
)
"AST.ml" 76 1796 1812 "AST.ml" 76 1796 1820
type(
  'i option
)
"AST.ml" 77 1825 1843 "AST.ml" 77 1825 1846
type(
  Ostap.Msg.Locator.t
)
ident(
  def loc "AST.ml" 78 1893 1906 "AST.ml" 79 1990 2019
)
"AST.ml" 77 1825 1848 "AST.ml" 77 1825 1849
type(
  [< `Comment of string * 'h | `Msg of Ostap.Msg.t ] as 'j
)
ident(
  def m "AST.ml" 78 1893 1906 "AST.ml" 79 1990 2019
)
"AST.ml" 77 1825 1853 "AST.ml" 77 1825 1854
type(
  'j list
)
"AST.ml" 77 1825 1848 "AST.ml" 77 1825 1854
type(
  'j list
)
"AST.ml" 77 1825 1843 "AST.ml" 77 1825 1854
type(
  Ostap.Msg.Locator.t * 'j list
)
"AST.ml" 77 1825 1842 "AST.ml" 77 1825 1855
type(
  (Ostap.Msg.Locator.t * 'j list) list
)
type(
  (Ostap.Msg.Locator.t * 'j list) list
)
"AST.ml" 77 1825 1858 "AST.ml" 77 1825 1861
type(
  'i
)
ident(
  int_ref err "AST.ml" 76 1796 1817 "AST.ml" 76 1796 1820
)
"AST.ml" 77 1825 1858 "AST.ml" 77 1825 1870
call(
  stack
)
type(
  ([> `First of int ] as 'k) ->
  ([> `Desc ] as 'l) -> (Ostap.Msg.Locator.t * 'j list) list
)
"AST.ml" 77 1825 1879 "AST.ml" 77 1825 1880
type(
  int
)
"AST.ml" 77 1825 1871 "AST.ml" 77 1825 1881
type(
  'k
)
"AST.ml" 77 1825 1882 "AST.ml" 77 1825 1889
type(
  'l
)
"AST.ml" 77 1825 1858 "AST.ml" 77 1825 1889
type(
  (Ostap.Msg.Locator.t * 'j list) list
)
"AST.ml" 78 1893 1910 "AST.ml" 78 1893 1911
type(
  Ostap.Msg.t
)
ident(
  def m "AST.ml" 79 1990 2003 "AST.ml" 79 1990 2019
)
"AST.ml" 78 1893 1921 "AST.ml" 78 1893 1922
type(
  'j
)
ident(
  int_ref m "AST.ml" 77 1825 1848 "AST.ml" 77 1825 1849
)
"AST.ml" 78 1893 1933 "AST.ml" 78 1893 1934
type(
  Ostap.Msg.t
)
ident(
  def m "AST.ml" 78 1893 1938 "AST.ml" 78 1893 1939
)
"AST.ml" 78 1893 1928 "AST.ml" 78 1893 1934
type(
  'j
)
"AST.ml" 78 1893 1938 "AST.ml" 78 1893 1939
type(
  Ostap.Msg.t
)
ident(
  int_ref m "AST.ml" 78 1893 1933 "AST.ml" 78 1893 1934
)
"AST.ml" 78 1893 1952 "AST.ml" 78 1893 1953
type(
  string
)
ident(
  def s "AST.ml" 78 1893 1961 "AST.ml" 78 1893 1986
)
"AST.ml" 78 1893 1955 "AST.ml" 78 1893 1956
type(
  'h
)
"AST.ml" 78 1893 1952 "AST.ml" 78 1893 1956
type(
  string * 'h
)
"AST.ml" 78 1893 1942 "AST.ml" 78 1893 1957
type(
  'j
)
"AST.ml" 78 1893 1961 "AST.ml" 78 1893 1975
type(
  string -> string array -> Ostap.Msg.Locator.t -> Ostap.Msg.t
)
ident(
  ext_ref Ostap.Msg.make
)
"AST.ml" 78 1893 1976 "AST.ml" 78 1893 1977
type(
  string
)
ident(
  int_ref s "AST.ml" 78 1893 1952 "AST.ml" 78 1893 1953
)
"AST.ml" 78 1893 1978 "AST.ml" 78 1893 1982
type(
  string array
)
"AST.ml" 78 1893 1983 "AST.ml" 78 1893 1986
type(
  Ostap.Msg.Locator.t
)
ident(
  int_ref loc "AST.ml" 77 1825 1843 "AST.ml" 77 1825 1846
)
"AST.ml" 78 1893 1961 "AST.ml" 78 1893 1986
call(
  stack
)
type(
  Ostap.Msg.t
)
"AST.ml" 78 1893 1915 "AST.ml" 78 1893 1986
type(
  Ostap.Msg.t
)
"AST.ml" 79 1990 2017 "AST.ml" 79 1990 2018
type(
  Ostap.Msg.t
)
ident(
  int_ref m "AST.ml" 78 1893 1910 "AST.ml" 78 1893 1911
)
"AST.ml" 79 1990 2016 "AST.ml" 79 1990 2019
type(
  Ostap.Msg.t list
)
type(
  Ostap.Msg.t list
)
"AST.ml" 79 1990 2003 "AST.ml" 79 1990 2019
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 78 1893 1906 "AST.ml" 79 1990 2019
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 77 1825 1838 "AST.ml" 79 1990 2019
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 76 1796 1806 "AST.ml" 80 2020 2031
type(
  'i option -> ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 75 1724 1732 "AST.ml" 80 2020 2031
call(
  stack
)
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 81 2032 2049 "AST.ml" 81 2032 2050
type(
  GT.string
)
ident(
  def m "AST.ml" 81 2032 2054 "AST.ml" 81 2032 2087
)
"AST.ml" 81 2032 2043 "AST.ml" 81 2032 2050
type(
  exn
)
"AST.ml" 81 2032 2068 "AST.ml" 81 2032 2084
type(
  GT.string -> Ostap.Msg.t
)
ident(
  ext_ref Ostap.Msg.phrase
)
"AST.ml" 81 2032 2085 "AST.ml" 81 2032 2086
type(
  GT.string
)
ident(
  int_ref m "AST.ml" 81 2032 2049 "AST.ml" 81 2032 2050
)
"AST.ml" 81 2032 2068 "AST.ml" 81 2032 2086
call(
  stack
)
type(
  Ostap.Msg.t
)
"AST.ml" 81 2032 2067 "AST.ml" 81 2032 2087
type(
  Ostap.Msg.t list
)
type(
  Ostap.Msg.t list
)
"AST.ml" 81 2032 2054 "AST.ml" 81 2032 2087
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 74 1714 1720 "AST.ml" 81 2032 2087
type(
  ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 73 1689 1710 "AST.ml" 81 2032 2087
type(
  string -> ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 73 1689 1708 "AST.ml" 81 2032 2087
type(
  (t -> ('f, 'g, 'i) Ostap.Combinators.result) ->
  string -> ('g, Ostap.Msg.t) Checked.t
)
"AST.ml" 88 2122 2130 "AST.ml" 88 2122 2136
type(
  (< getIDENT : ('a, Ostap.Matcher.Token.t, < add : 'b -> 'b; .. > as 'b)
                Ostap.Combinators.result;
     getLITERAL : ('a, Ostap.Matcher.Token.t, 'b) Ostap.Combinators.result;
     look : GT.string -> ('a, 'c, 'b) Ostap.Combinators.result;
     regexp : string -> string -> ('a, 'd, 'b) Ostap.Combinators.result; .. >
   as 'a) ->
  ('a, t, 'b) Ostap.Combinators.result
)
ident(
  def hparse "AST.ml" 155 4323 4327 "AST.ml" 157 4368 4373
)
"AST.ml" 88 2122 2137 "AST.ml" 88 2122 2138
type(
  'a
)
ident(
  def s "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
"AST.ml" 90 2160 2177 "AST.ml" 90 2160 2188
type(
  (< getIDENT : ('e, Ostap.Matcher.Token.t, < add : 'f -> 'f; .. > as 'f)
                Ostap.Combinators.result;
     getLITERAL : ('e, Ostap.Matcher.Token.t, 'f) Ostap.Combinators.result;
     look : GT.string -> ('e, 'g, 'f) Ostap.Combinators.result;
     regexp : string -> string -> ('e, 'h, 'f) Ostap.Combinators.result; .. >
   as 'e) ->
  ('e, GT.string, 'f) Ostap.Combinators.result
)
ident(
  int_ref Lexer.ident "AST.ml" 50 916 922 "AST.ml" 51 975 1021
)
"AST.ml" 90 2160 2168 "AST.ml" 90 2160 2189
call(
  tail
)
type(
  'e -> ('e, GT.string, 'f) Ostap.Combinators.result
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 90 2160 2168 "AST.ml" 90 2160 2189
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 90 2160 2168 "AST.ml" 90 2160 2189
)
"AST.ml" 91 2191 2203 "AST.ml" 91 2191 2207
type(
  string
)
ident(
  def name "AST.ml" 91 2191 2199 "AST.ml" 91 2191 2232
)
"AST.ml" 91 2191 2212 "AST.ml" 91 2191 2216
type(
  string
)
ident(
  int_ref name "AST.ml" 91 2191 2203 "AST.ml" 91 2191 2207
)
"AST.ml" 91 2191 2219 "AST.ml" 91 2191 2224
type(
  string
)
"AST.ml" 91 2191 2212 "AST.ml" 91 2191 2224
call(
  stack
)
type(
  string
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
"AST.ml" 91 2191 2227 "AST.ml" 91 2191 2231
type(
  string
)
ident(
  int_ref name "AST.ml" 91 2191 2203 "AST.ml" 91 2191 2207
)
"AST.ml" 91 2191 2210 "AST.ml" 91 2191 2232
call(
  tail
)
type(
  'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  string -> string -> ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 91 2191 2210 "AST.ml" 91 2191 2232
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 91 2191 2210 "AST.ml" 91 2191 2232
)
"AST.ml" 91 2191 2199 "AST.ml" 91 2191 2232
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 91 2191 2199 "AST.ml" 91 2191 2232
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 91 2191 2199 "AST.ml" 91 2191 2232
)
"AST.ml" 92 2234 2246 "AST.ml" 92 2234 2249
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  def env "AST.ml" 92 2234 2242 "AST.ml" 94 2337 2356
)
"AST.ml" 93 2254 2265 "AST.ml" 93 2254 2268
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 93 2254 2269 "AST.ml" 93 2254 2274
type(
  string
)
"AST.ml" 93 2254 2265 "AST.ml" 93 2254 2275
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 93 2254 2265 "AST.ml" 93 2254 2275
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 93 2254 2265 "AST.ml" 93 2254 2275
)
"AST.ml" 93 2254 2277 "AST.ml" 93 2254 2279
type(
  GT.string
)
ident(
  def x "AST.ml" 93 2254 2264 "AST.ml" 93 2254 2335
)
"AST.ml" 93 2254 2279 "AST.ml" 93 2254 2284
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse
)
ident(
  int_ref ident "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 93 2254 2286 "AST.ml" 93 2254 2289
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 93 2254 2286 "AST.ml" 93 2254 2289
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 93 2254 2286 "AST.ml" 93 2254 2289
)
"AST.ml" 93 2254 2291 "AST.ml" 93 2254 2293
type(
  t
)
ident(
  def e "AST.ml" 93 2254 2264 "AST.ml" 93 2254 2335
)
"AST.ml" 93 2254 2293 "AST.ml" 93 2254 2297
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref apps "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 93 2254 2298 "AST.ml" 93 2254 2301
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 92 2234 2246 "AST.ml" 92 2234 2249
)
"AST.ml" 93 2254 2293 "AST.ml" 93 2254 2302
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 93 2254 2293 "AST.ml" 93 2254 2302
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 93 2254 2293 "AST.ml" 93 2254 2302
)
"AST.ml" 93 2254 2304 "AST.ml" 93 2254 2307
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 93 2254 2308 "AST.ml" 93 2254 2312
type(
  string
)
"AST.ml" 93 2254 2304 "AST.ml" 93 2254 2313
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 93 2254 2304 "AST.ml" 93 2254 2313
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 93 2254 2304 "AST.ml" 93 2254 2313
)
"AST.ml" 93 2254 2314 "AST.ml" 93 2254 2317
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref def "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 93 2254 2319 "AST.ml" 93 2254 2320
type(
  GT.string
)
ident(
  int_ref x "AST.ml" 93 2254 2277 "AST.ml" 93 2254 2279
)
"AST.ml" 93 2254 2327 "AST.ml" 93 2254 2328
type(
  t
)
ident(
  int_ref e "AST.ml" 93 2254 2291 "AST.ml" 93 2254 2293
)
"AST.ml" 93 2254 2322 "AST.ml" 93 2254 2328
type(
  [ `Arg | `Def of t ]
)
"AST.ml" 93 2254 2318 "AST.ml" 93 2254 2329
type(
  GT.string * [ `Arg | `Def of t ]
)
"AST.ml" 93 2254 2331 "AST.ml" 93 2254 2334
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 92 2234 2246 "AST.ml" 92 2234 2249
)
"AST.ml" 93 2254 2318 "AST.ml" 93 2254 2334
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
"AST.ml" 93 2254 2314 "AST.ml" 93 2254 2335
call(
  tail
)
type(
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 93 2254 2314 "AST.ml" 93 2254 2335
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 93 2254 2314 "AST.ml" 93 2254 2335
)
"AST.ml" 93 2254 2264 "AST.ml" 93 2254 2335
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  GT.string -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  (t -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'g
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('g -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse ->
  (GT.string -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 94 2337 2347 "AST.ml" 94 2337 2351
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref apps "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 94 2337 2352 "AST.ml" 94 2337 2355
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 92 2234 2246 "AST.ml" 92 2234 2249
)
"AST.ml" 94 2337 2347 "AST.ml" 94 2337 2356
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 94 2337 2347 "AST.ml" 94 2337 2356
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 94 2337 2347 "AST.ml" 94 2337 2356
)
"AST.ml" 93 2254 2264 "AST.ml" 94 2337 2356
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"AST.ml" 92 2234 2242 "AST.ml" 94 2337 2356
call(
  tail
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 92 2234 2242 "AST.ml" 94 2337 2356
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 92 2234 2242 "AST.ml" 94 2337 2356
)
"AST.ml" 95 2358 2371 "AST.ml" 95 2358 2374
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  def env "AST.ml" 95 2358 2366 "AST.ml" 120 3045 3054
)
"AST.ml" 96 2378 2383 "AST.ml" 96 2378 2398
type(
  (('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ([ `Lefta | `Nona | `Righta ] *
   (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list)
  array ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Util.expr
)
"AST.ml" 97 2400 2418 "AST.ml" 97 2400 2419
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  def x "AST.ml" 97 2400 2423 "AST.ml" 97 2400 2424
)
"AST.ml" 97 2400 2423 "AST.ml" 97 2400 2424
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  int_ref x "AST.ml" 97 2400 2418 "AST.ml" 97 2400 2419
)
"AST.ml" 97 2400 2413 "AST.ml" 97 2400 2425
type(
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
"AST.ml" 98 2426 2437 "AST.ml" 98 2426 2438
type(
  GT.string list ->
  (('e -> ('e, unit, 'f) Ostap.Combinators.result) * (t -> t -> t)) list
)
ident(
  def l "AST.ml" 108 2717 2731 "AST.ml" 117 2994 3010
)
"AST.ml" 99 2442 2451 "AST.ml" 99 2442 2459
type(
  (GT.string ->
   ('e -> ('e, unit, 'f) Ostap.Combinators.result) * (t -> t -> t)) ->
  GT.string list ->
  (('e -> ('e, unit, 'f) Ostap.Combinators.result) * (t -> t -> t)) list
)
ident(
  ext_ref List.map
)
"AST.ml" 100 2461 2470 "AST.ml" 100 2461 2471
type(
  GT.string
)
ident(
  def s "AST.ml" 101 2476 2483 "AST.ml" 105 2628 2685
)
"AST.ml" 101 2476 2493 "AST.ml" 101 2476 2494
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 100 2461 2470 "AST.ml" 100 2461 2471
)
"AST.ml" 101 2476 2491 "AST.ml" 101 2476 2495
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 101 2476 2491 "AST.ml" 101 2476 2495
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 101 2476 2491 "AST.ml" 101 2476 2495
)
"AST.ml" 101 2476 2489 "AST.ml" 101 2476 2495
type(
  'g -> unit
)
type(
  unit
)
type(
  'g
)
type(
  ('g -> unit) ->
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('e, unit, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 101 2476 2483 "AST.ml" 101 2476 2496
call(
  tail
)
type(
  'e -> ('e, unit, 'f) Ostap.Combinators.result
)
type(
  ('e, unit, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 101 2476 2483 "AST.ml" 101 2476 2496
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 101 2476 2483 "AST.ml" 101 2476 2496
)
"AST.ml" 102 2499 2512 "AST.ml" 102 2499 2513
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 100 2461 2470 "AST.ml" 100 2461 2471
)
"AST.ml" 103 2520 2543 "AST.ml" 103 2520 2547
type(
  GT.string
)
"AST.ml" 103 2520 2555 "AST.ml" 103 2520 2556
type(
  t
)
ident(
  def x "AST.ml" 103 2520 2557 "AST.ml" 103 2520 2572
)
"AST.ml" 103 2520 2557 "AST.ml" 103 2520 2558
type(
  t
)
ident(
  def y "AST.ml" 103 2520 2562 "AST.ml" 103 2520 2572
)
"AST.ml" 103 2520 2567 "AST.ml" 103 2520 2568
type(
  t
)
ident(
  int_ref x "AST.ml" 103 2520 2555 "AST.ml" 103 2520 2556
)
"AST.ml" 103 2520 2570 "AST.ml" 103 2520 2571
type(
  t
)
ident(
  int_ref y "AST.ml" 103 2520 2557 "AST.ml" 103 2520 2558
)
"AST.ml" 103 2520 2562 "AST.ml" 103 2520 2572
type(
  t
)
"AST.ml" 103 2520 2557 "AST.ml" 103 2520 2572
type(
  t -> t
)
"AST.ml" 103 2520 2551 "AST.ml" 103 2520 2572
type(
  t -> t -> t
)
"AST.ml" 104 2574 2597 "AST.ml" 104 2574 2600
type(
  GT.string
)
"AST.ml" 104 2574 2609 "AST.ml" 104 2574 2610
type(
  t
)
ident(
  def x "AST.ml" 104 2574 2611 "AST.ml" 104 2574 2626
)
"AST.ml" 104 2574 2611 "AST.ml" 104 2574 2612
type(
  t
)
ident(
  def y "AST.ml" 104 2574 2616 "AST.ml" 104 2574 2626
)
"AST.ml" 104 2574 2621 "AST.ml" 104 2574 2622
type(
  t
)
ident(
  int_ref x "AST.ml" 104 2574 2609 "AST.ml" 104 2574 2610
)
"AST.ml" 104 2574 2624 "AST.ml" 104 2574 2625
type(
  t
)
ident(
  int_ref y "AST.ml" 104 2574 2611 "AST.ml" 104 2574 2612
)
"AST.ml" 104 2574 2616 "AST.ml" 104 2574 2626
type(
  t
)
"AST.ml" 104 2574 2611 "AST.ml" 104 2574 2626
type(
  t -> t
)
"AST.ml" 104 2574 2605 "AST.ml" 104 2574 2626
type(
  t -> t -> t
)
"AST.ml" 105 2628 2651 "AST.ml" 105 2628 2652
type(
  GT.string
)
"AST.ml" 105 2628 2663 "AST.ml" 105 2628 2664
type(
  t
)
ident(
  def x "AST.ml" 105 2628 2665 "AST.ml" 105 2628 2685
)
"AST.ml" 105 2628 2665 "AST.ml" 105 2628 2666
type(
  t
)
ident(
  def y "AST.ml" 105 2628 2670 "AST.ml" 105 2628 2685
)
"AST.ml" 105 2628 2677 "AST.ml" 105 2628 2678
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 100 2461 2470 "AST.ml" 100 2461 2471
)
"AST.ml" 105 2628 2680 "AST.ml" 105 2628 2681
type(
  t
)
ident(
  int_ref x "AST.ml" 105 2628 2663 "AST.ml" 105 2628 2664
)
"AST.ml" 105 2628 2683 "AST.ml" 105 2628 2684
type(
  t
)
ident(
  int_ref y "AST.ml" 105 2628 2665 "AST.ml" 105 2628 2666
)
"AST.ml" 105 2628 2670 "AST.ml" 105 2628 2685
type(
  t
)
"AST.ml" 105 2628 2665 "AST.ml" 105 2628 2685
type(
  t -> t
)
"AST.ml" 105 2628 2659 "AST.ml" 105 2628 2685
type(
  t -> t -> t
)
"AST.ml" 102 2499 2506 "AST.ml" 105 2628 2685
type(
  t -> t -> t
)
"AST.ml" 101 2476 2483 "AST.ml" 105 2628 2685
type(
  ('e -> ('e, unit, 'f) Ostap.Combinators.result) * (t -> t -> t)
)
"AST.ml" 100 2461 2465 "AST.ml" 106 2686 2705
type(
  GT.string ->
  ('e -> ('e, unit, 'f) Ostap.Combinators.result) * (t -> t -> t)
)
"AST.ml" 99 2442 2451 "AST.ml" 106 2686 2705
call(
  stack
)
type(
  GT.string list ->
  (('e -> ('e, unit, 'f) Ostap.Combinators.result) * (t -> t -> t)) list
)
"AST.ml" 108 2717 2731 "AST.ml" 108 2717 2740
type(
  ([ `Lefta | `Nona | `Righta ] * GT.string list ->
   [ `Lefta | `Nona | `Righta ] *
   (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list) ->
  ([ `Lefta | `Nona | `Righta ] * GT.string list) array ->
  ([ `Lefta | `Nona | `Righta ] *
   (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list)
  array
)
ident(
  ext_ref Array.map
)
"AST.ml" 108 2717 2747 "AST.ml" 108 2717 2748
type(
  [ `Lefta | `Nona | `Righta ]
)
ident(
  def a "AST.ml" 108 2717 2756 "AST.ml" 108 2717 2762
)
"AST.ml" 108 2717 2750 "AST.ml" 108 2717 2751
type(
  GT.string list
)
ident(
  def s "AST.ml" 108 2717 2756 "AST.ml" 108 2717 2762
)
"AST.ml" 108 2717 2747 "AST.ml" 108 2717 2751
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 108 2717 2756 "AST.ml" 108 2717 2757
type(
  [ `Lefta | `Nona | `Righta ]
)
ident(
  int_ref a "AST.ml" 108 2717 2747 "AST.ml" 108 2717 2748
)
"AST.ml" 108 2717 2759 "AST.ml" 108 2717 2760
type(
  GT.string list ->
  (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list
)
ident(
  int_ref l "AST.ml" 98 2426 2437 "AST.ml" 98 2426 2438
)
"AST.ml" 108 2717 2761 "AST.ml" 108 2717 2762
type(
  GT.string list
)
ident(
  int_ref s "AST.ml" 108 2717 2750 "AST.ml" 108 2717 2751
)
"AST.ml" 108 2717 2759 "AST.ml" 108 2717 2762
call(
  stack
)
type(
  (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list
)
"AST.ml" 108 2717 2756 "AST.ml" 108 2717 2762
type(
  [ `Lefta | `Nona | `Righta ] *
  (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list
)
"AST.ml" 108 2717 2741 "AST.ml" 108 2717 2763
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list ->
  [ `Lefta | `Nona | `Righta ] *
  (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list
)
"AST.ml" 110 2782 2798 "AST.ml" 110 2782 2804
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 110 2782 2807 "AST.ml" 110 2782 2811
type(
  GT.string
)
"AST.ml" 110 2782 2806 "AST.ml" 110 2782 2812
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 110 2782 2798 "AST.ml" 110 2782 2812
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 111 2814 2830 "AST.ml" 111 2814 2836
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 111 2814 2839 "AST.ml" 111 2814 2842
type(
  GT.string
)
"AST.ml" 111 2814 2838 "AST.ml" 111 2814 2843
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 111 2814 2830 "AST.ml" 111 2814 2843
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 112 2861 2863 "AST.ml" 112 2861 2869
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 112 2861 2872 "AST.ml" 112 2861 2876
type(
  GT.string
)
"AST.ml" 112 2861 2871 "AST.ml" 112 2861 2877
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 112 2861 2863 "AST.ml" 112 2861 2877
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 113 2879 2881 "AST.ml" 113 2879 2887
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 113 2879 2890 "AST.ml" 113 2879 2894
type(
  GT.string
)
"AST.ml" 113 2879 2889 "AST.ml" 113 2879 2895
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 113 2879 2881 "AST.ml" 113 2879 2895
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 114 2897 2899 "AST.ml" 114 2897 2904
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 114 2897 2908 "AST.ml" 114 2897 2912
type(
  GT.string
)
"AST.ml" 114 2897 2914 "AST.ml" 114 2897 2918
type(
  GT.string
)
"AST.ml" 114 2897 2920 "AST.ml" 114 2897 2924
type(
  GT.string
)
"AST.ml" 114 2897 2926 "AST.ml" 114 2897 2929
type(
  GT.string
)
"AST.ml" 114 2897 2931 "AST.ml" 114 2897 2935
type(
  GT.string
)
"AST.ml" 114 2897 2937 "AST.ml" 114 2897 2940
type(
  GT.string
)
"AST.ml" 114 2897 2907 "AST.ml" 114 2897 2941
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 114 2897 2899 "AST.ml" 114 2897 2941
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 115 2943 2945 "AST.ml" 115 2943 2951
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 115 2943 2954 "AST.ml" 115 2943 2957
type(
  GT.string
)
"AST.ml" 115 2943 2960 "AST.ml" 115 2943 2963
type(
  GT.string
)
"AST.ml" 115 2943 2953 "AST.ml" 115 2943 2964
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 115 2943 2945 "AST.ml" 115 2943 2964
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 116 2966 2968 "AST.ml" 116 2966 2974
type(
  [ `Lefta | `Nona | `Righta ]
)
"AST.ml" 116 2966 2977 "AST.ml" 116 2966 2980
type(
  GT.string
)
"AST.ml" 116 2966 2983 "AST.ml" 116 2966 2986
type(
  GT.string
)
"AST.ml" 116 2966 2988 "AST.ml" 116 2966 2991
type(
  GT.string
)
"AST.ml" 116 2966 2976 "AST.ml" 116 2966 2992
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
type(
  GT.string list
)
"AST.ml" 116 2966 2968 "AST.ml" 116 2966 2992
type(
  [ `Lefta | `Nona | `Righta ] * GT.string list
)
"AST.ml" 109 2765 2779 "AST.ml" 117 2994 3010
type(
  ([ `Lefta | `Nona | `Righta ] * GT.string list) array
)
"AST.ml" 108 2717 2731 "AST.ml" 117 2994 3010
call(
  stack
)
type(
  ([ `Lefta | `Nona | `Righta ] *
   (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list)
  array
)
"AST.ml" 98 2426 2432 "AST.ml" 118 3012 3019
type(
  ([ `Lefta | `Nona | `Righta ] *
   (('e, unit, 'f) Ostap.Combinators.parse * (t -> t -> t)) list)
  array
)
"AST.ml" 119 3020 3027 "AST.ml" 119 3020 3034
type(
  ((GT.string * [ `Arg | `Def of t ]) list ->
   'e -> ('e, t, 'f) Ostap.Combinators.result) ->
  (GT.string * [ `Arg | `Def of t ]) list ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  int_ref primary "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 119 3020 3035 "AST.ml" 119 3020 3039
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref apps "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 119 3020 3040 "AST.ml" 119 3020 3043
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 95 2358 2371 "AST.ml" 95 2358 2374
)
"AST.ml" 119 3020 3026 "AST.ml" 119 3020 3044
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
"AST.ml" 95 2358 2366 "AST.ml" 120 3045 3054
call(
  tail
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 95 2358 2366 "AST.ml" 120 3045 3054
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 95 2358 2366 "AST.ml" 120 3045 3054
)
"AST.ml" 121 3056 3062 "AST.ml" 121 3056 3065
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  def env "AST.ml" 121 3056 3057 "AST.ml" 124 3152 3161
)
"AST.ml" 121 3056 3068 "AST.ml" 121 3056 3070
type(
  t list
)
ident(
  def p "AST.ml" 122 3083 3086 "AST.ml" 123 3102 3151
)
"AST.ml" 121 3056 3070 "AST.ml" 121 3056 3074
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 121 3056 3075 "AST.ml" 121 3056 3078
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 121 3056 3062 "AST.ml" 121 3056 3065
)
"AST.ml" 121 3056 3070 "AST.ml" 121 3056 3079
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 121 3056 3070 "AST.ml" 121 3056 3079
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 121 3056 3070 "AST.ml" 121 3056 3079
)
"AST.ml" 121 3056 3070 "AST.ml" 121 3056 3080
call(
  stack
)
type(
  ('e, t list, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t list, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.some
)
"AST.ml" 122 3083 3090 "AST.ml" 122 3083 3091
type(
  t
)
ident(
  def h "AST.ml" 123 3102 3105 "AST.ml" 123 3102 3151
)
"AST.ml" 122 3083 3093 "AST.ml" 122 3083 3094
type(
  t list
)
ident(
  def t "AST.ml" 123 3102 3105 "AST.ml" 123 3102 3151
)
"AST.ml" 122 3083 3090 "AST.ml" 122 3083 3094
type(
  t list
)
"AST.ml" 122 3083 3097 "AST.ml" 122 3083 3098
type(
  t list
)
ident(
  int_ref p "AST.ml" 121 3056 3068 "AST.ml" 121 3056 3070
)
"AST.ml" 123 3102 3105 "AST.ml" 123 3102 3119
type(
  (t -> t -> t) -> t -> t list -> t
)
ident(
  ext_ref List.fold_left
)
"AST.ml" 123 3102 3125 "AST.ml" 123 3102 3128
type(
  t
)
ident(
  def acc "AST.ml" 123 3102 3129 "AST.ml" 123 3102 3146
)
"AST.ml" 123 3102 3129 "AST.ml" 123 3102 3130
type(
  t
)
ident(
  def e "AST.ml" 123 3102 3134 "AST.ml" 123 3102 3146
)
"AST.ml" 123 3102 3139 "AST.ml" 123 3102 3142
type(
  t
)
ident(
  int_ref acc "AST.ml" 123 3102 3125 "AST.ml" 123 3102 3128
)
"AST.ml" 123 3102 3144 "AST.ml" 123 3102 3145
type(
  t
)
ident(
  int_ref e "AST.ml" 123 3102 3129 "AST.ml" 123 3102 3130
)
"AST.ml" 123 3102 3134 "AST.ml" 123 3102 3146
type(
  t
)
"AST.ml" 123 3102 3129 "AST.ml" 123 3102 3146
type(
  t -> t
)
"AST.ml" 123 3102 3120 "AST.ml" 123 3102 3147
type(
  t -> t -> t
)
"AST.ml" 123 3102 3148 "AST.ml" 123 3102 3149
type(
  t
)
ident(
  int_ref h "AST.ml" 122 3083 3090 "AST.ml" 122 3083 3091
)
"AST.ml" 123 3102 3150 "AST.ml" 123 3102 3151
type(
  t list
)
ident(
  int_ref t "AST.ml" 122 3083 3093 "AST.ml" 122 3083 3094
)
"AST.ml" 123 3102 3105 "AST.ml" 123 3102 3151
call(
  tail
)
type(
  t
)
"AST.ml" 122 3083 3086 "AST.ml" 123 3102 3151
type(
  t
)
"AST.ml" 121 3056 3068 "AST.ml" 124 3152 3161
type(
  t list -> t
)
type(
  t list
)
ident(
  def _0 "AST.ml" 122 3083 3086 "AST.ml" 123 3102 3151
)
type(
  (t list -> t) ->
  ('e, t list, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 121 3056 3057 "AST.ml" 124 3152 3161
call(
  tail
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 121 3056 3057 "AST.ml" 124 3152 3161
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 121 3056 3057 "AST.ml" 124 3152 3161
)
"AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  def expr "AST.ml" 125 3163 3171 "AST.ml" 151 4284 4295
)
"AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  def env "AST.ml" 125 3163 3171 "AST.ml" 151 4284 4295
)
"AST.ml" 126 3191 3202 "AST.ml" 126 3191 3205
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 126 3191 3202 "AST.ml" 126 3191 3205
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 126 3191 3202 "AST.ml" 126 3191 3205
)
"AST.ml" 126 3191 3206 "AST.ml" 126 3191 3210
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 126 3191 3211 "AST.ml" 126 3191 3214
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 126 3191 3206 "AST.ml" 126 3191 3215
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 126 3191 3206 "AST.ml" 126 3191 3215
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 126 3191 3206 "AST.ml" 126 3191 3215
)
"AST.ml" 126 3191 3217 "AST.ml" 126 3191 3220
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 126 3191 3217 "AST.ml" 126 3191 3220
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 126 3191 3217 "AST.ml" 126 3191 3220
)
"AST.ml" 126 3191 3201 "AST.ml" 126 3191 3220
call(
  stack
)
call(
  tail
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> t
)
type(
  t
)
ident(
  int_ref _0 "AST.ml" 126 3191 3201 "AST.ml" 126 3191 3220
)
type(
  'g
)
type(
  ('g -> t) ->
  ('e, 'g, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "AST.ml" 126 3191 3201 "AST.ml" 126 3191 3220
)
type(
  t
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  (t -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'g
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('g -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 127 3221 3231 "AST.ml" 127 3221 3233
type(
  GT.int
)
ident(
  def k "AST.ml" 127 3221 3251 "AST.ml" 127 3221 3258
)
"AST.ml" 127 3221 3235 "AST.ml" 127 3221 3248
type(
  ('e, GT.int, 'f) Ostap.Combinators.parse
)
ident(
  int_ref Lexer.literal "AST.ml" 50 916 922 "AST.ml" 51 975 1021
)
"AST.ml" 127 3221 3257 "AST.ml" 127 3221 3258
type(
  GT.int
)
ident(
  int_ref k "AST.ml" 127 3221 3231 "AST.ml" 127 3221 3233
)
"AST.ml" 127 3221 3251 "AST.ml" 127 3221 3258
type(
  t
)
"AST.ml" 127 3221 3231 "AST.ml" 127 3221 3259
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  GT.int -> t
)
type(
  GT.int
)
ident(
  def _0 "AST.ml" 127 3221 3251 "AST.ml" 127 3221 3258
)
type(
  (GT.int -> t) ->
  ('e, GT.int, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 128 3260 3270 "AST.ml" 128 3260 3273
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 128 3260 3274 "AST.ml" 128 3260 3280
type(
  string
)
"AST.ml" 128 3260 3270 "AST.ml" 128 3260 3282
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 128 3260 3270 "AST.ml" 128 3260 3282
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 128 3260 3270 "AST.ml" 128 3260 3282
)
"AST.ml" 128 3260 3284 "AST.ml" 128 3260 3288
type(
  t
)
"AST.ml" 128 3260 3270 "AST.ml" 128 3260 3289
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> t
)
type(
  'h
)
ident(
  def _0 "AST.ml" 128 3260 3284 "AST.ml" 128 3260 3288
)
type(
  'h
)
type(
  ('h -> t) ->
  ('e, 'h, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 129 3291 3301 "AST.ml" 129 3291 3304
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 129 3291 3305 "AST.ml" 129 3291 3312
type(
  string
)
"AST.ml" 129 3291 3301 "AST.ml" 129 3291 3313
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 129 3291 3301 "AST.ml" 129 3291 3313
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 129 3291 3301 "AST.ml" 129 3291 3313
)
"AST.ml" 129 3291 3315 "AST.ml" 129 3291 3320
type(
  t
)
"AST.ml" 129 3291 3301 "AST.ml" 129 3291 3321
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> t
)
type(
  'h
)
ident(
  def _0 "AST.ml" 129 3291 3315 "AST.ml" 129 3291 3320
)
type(
  'h
)
type(
  ('h -> t) ->
  ('e, 'h, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 130 3322 3332 "AST.ml" 130 3322 3335
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 130 3322 3336 "AST.ml" 130 3322 3341
type(
  string
)
"AST.ml" 130 3322 3332 "AST.ml" 130 3322 3342
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 130 3322 3332 "AST.ml" 130 3322 3342
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 130 3322 3332 "AST.ml" 130 3322 3342
)
"AST.ml" 130 3322 3343 "AST.ml" 130 3322 3345
type(
  t
)
ident(
  def e "AST.ml" 130 3322 3356 "AST.ml" 130 3322 3361
)
"AST.ml" 130 3322 3345 "AST.ml" 130 3322 3349
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 130 3322 3350 "AST.ml" 130 3322 3353
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 130 3322 3345 "AST.ml" 130 3322 3354
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 130 3322 3345 "AST.ml" 130 3322 3354
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 130 3322 3345 "AST.ml" 130 3322 3354
)
"AST.ml" 130 3322 3360 "AST.ml" 130 3322 3361
type(
  t
)
ident(
  int_ref e "AST.ml" 130 3322 3343 "AST.ml" 130 3322 3345
)
"AST.ml" 130 3322 3356 "AST.ml" 130 3322 3361
type(
  t
)
"AST.ml" 130 3322 3332 "AST.ml" 130 3322 3362
call(
  stack
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 130 3322 3356 "AST.ml" 130 3322 3361
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h
)
ident(
  def _1 "AST.ml" 130 3322 3332 "AST.ml" 130 3322 3362
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 131 3363 3373 "AST.ml" 131 3363 3376
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 131 3363 3377 "AST.ml" 131 3363 3381
type(
  string
)
"AST.ml" 131 3363 3373 "AST.ml" 131 3363 3382
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3382
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3382
)
"AST.ml" 131 3363 3383 "AST.ml" 131 3363 3385
type(
  t
)
ident(
  def c "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
"AST.ml" 131 3363 3385 "AST.ml" 131 3363 3389
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 131 3363 3390 "AST.ml" 131 3363 3393
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 131 3363 3385 "AST.ml" 131 3363 3394
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3385 "AST.ml" 131 3363 3394
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3385 "AST.ml" 131 3363 3394
)
"AST.ml" 131 3363 3395 "AST.ml" 131 3363 3398
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 131 3363 3399 "AST.ml" 131 3363 3405
type(
  string
)
"AST.ml" 131 3363 3395 "AST.ml" 131 3363 3406
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3395 "AST.ml" 131 3363 3406
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3395 "AST.ml" 131 3363 3406
)
"AST.ml" 131 3363 3407 "AST.ml" 131 3363 3410
type(
  t
)
ident(
  def e1 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
"AST.ml" 131 3363 3410 "AST.ml" 131 3363 3414
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 131 3363 3415 "AST.ml" 131 3363 3418
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 131 3363 3410 "AST.ml" 131 3363 3419
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3410 "AST.ml" 131 3363 3419
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3410 "AST.ml" 131 3363 3419
)
"AST.ml" 131 3363 3420 "AST.ml" 131 3363 3423
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 131 3363 3424 "AST.ml" 131 3363 3430
type(
  string
)
"AST.ml" 131 3363 3420 "AST.ml" 131 3363 3431
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3420 "AST.ml" 131 3363 3431
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3420 "AST.ml" 131 3363 3431
)
"AST.ml" 131 3363 3432 "AST.ml" 131 3363 3435
type(
  t
)
ident(
  def e2 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
"AST.ml" 131 3363 3435 "AST.ml" 131 3363 3439
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 131 3363 3440 "AST.ml" 131 3363 3443
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 131 3363 3435 "AST.ml" 131 3363 3444
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3435 "AST.ml" 131 3363 3444
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3435 "AST.ml" 131 3363 3444
)
"AST.ml" 131 3363 3445 "AST.ml" 131 3363 3448
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 131 3363 3449 "AST.ml" 131 3363 3453
type(
  string
)
"AST.ml" 131 3363 3445 "AST.ml" 131 3363 3454
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 131 3363 3445 "AST.ml" 131 3363 3454
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 131 3363 3445 "AST.ml" 131 3363 3454
)
"AST.ml" 131 3363 3460 "AST.ml" 131 3363 3461
type(
  t
)
ident(
  int_ref c "AST.ml" 131 3363 3383 "AST.ml" 131 3363 3385
)
"AST.ml" 131 3363 3463 "AST.ml" 131 3363 3465
type(
  t
)
ident(
  int_ref e1 "AST.ml" 131 3363 3407 "AST.ml" 131 3363 3410
)
"AST.ml" 131 3363 3467 "AST.ml" 131 3363 3469
type(
  t
)
ident(
  int_ref e2 "AST.ml" 131 3363 3432 "AST.ml" 131 3363 3435
)
"AST.ml" 131 3363 3456 "AST.ml" 131 3363 3470
type(
  t
)
"AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> t
)
type(
  'h
)
ident(
  def _0 "AST.ml" 131 3363 3456 "AST.ml" 131 3363 3470
)
type(
  'h
)
type(
  ('h -> t) ->
  ('e, 'h, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _1 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  (t -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'h
)
ident(
  def _2 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  t
)
ident(
  def _3 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  (t -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'h
)
ident(
  def _4 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  t
)
ident(
  def _5 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  (t -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'h
)
ident(
  def _6 "AST.ml" 131 3363 3373 "AST.ml" 131 3363 3471
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 132 3473 3483 "AST.ml" 132 3473 3486
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 132 3473 3487 "AST.ml" 132 3473 3492
type(
  string
)
"AST.ml" 132 3473 3483 "AST.ml" 132 3473 3493
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 132 3473 3483 "AST.ml" 132 3473 3493
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 132 3473 3483 "AST.ml" 132 3473 3493
)
"AST.ml" 132 3473 3494 "AST.ml" 132 3473 3496
type(
  GT.string
)
ident(
  def n "AST.ml" 132 3473 3483 "AST.ml" 132 3473 3536
)
"AST.ml" 132 3473 3496 "AST.ml" 132 3473 3501
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse
)
ident(
  int_ref ident "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 132 3473 3502 "AST.ml" 132 3473 3505
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 132 3473 3506 "AST.ml" 132 3473 3510
type(
  string
)
"AST.ml" 132 3473 3502 "AST.ml" 132 3473 3511
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 132 3473 3502 "AST.ml" 132 3473 3511
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 132 3473 3502 "AST.ml" 132 3473 3511
)
"AST.ml" 132 3473 3512 "AST.ml" 132 3473 3514
type(
  t
)
ident(
  def e "AST.ml" 132 3473 3525 "AST.ml" 132 3473 3535
)
"AST.ml" 132 3473 3514 "AST.ml" 132 3473 3518
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 132 3473 3519 "AST.ml" 132 3473 3522
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 132 3473 3514 "AST.ml" 132 3473 3523
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 132 3473 3514 "AST.ml" 132 3473 3523
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 132 3473 3514 "AST.ml" 132 3473 3523
)
"AST.ml" 132 3473 3530 "AST.ml" 132 3473 3531
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 132 3473 3494 "AST.ml" 132 3473 3496
)
"AST.ml" 132 3473 3533 "AST.ml" 132 3473 3534
type(
  t
)
ident(
  int_ref e "AST.ml" 132 3473 3512 "AST.ml" 132 3473 3514
)
"AST.ml" 132 3473 3525 "AST.ml" 132 3473 3535
type(
  t
)
"AST.ml" 132 3473 3483 "AST.ml" 132 3473 3536
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  GT.string -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 132 3473 3525 "AST.ml" 132 3473 3535
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h
)
ident(
  def _1 "AST.ml" 132 3473 3483 "AST.ml" 132 3473 3536
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  GT.string
)
ident(
  def _2 "AST.ml" 132 3473 3483 "AST.ml" 132 3473 3536
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse ->
  (GT.string -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'h
)
ident(
  def _3 "AST.ml" 132 3473 3483 "AST.ml" 132 3473 3536
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 133 3537 3547 "AST.ml" 133 3537 3550
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 133 3537 3551 "AST.ml" 133 3537 3562
type(
  string
)
"AST.ml" 133 3537 3547 "AST.ml" 133 3537 3563
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 133 3537 3547 "AST.ml" 133 3537 3563
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 133 3537 3547 "AST.ml" 133 3537 3563
)
"AST.ml" 133 3537 3564 "AST.ml" 133 3537 3566
type(
  GT.string
)
ident(
  def n "AST.ml" 133 3537 3547 "AST.ml" 133 3537 3607
)
"AST.ml" 133 3537 3566 "AST.ml" 133 3537 3571
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse
)
ident(
  int_ref ident "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 133 3537 3572 "AST.ml" 133 3537 3575
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 133 3537 3576 "AST.ml" 133 3537 3580
type(
  string
)
"AST.ml" 133 3537 3572 "AST.ml" 133 3537 3581
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 133 3537 3572 "AST.ml" 133 3537 3581
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 133 3537 3572 "AST.ml" 133 3537 3581
)
"AST.ml" 133 3537 3582 "AST.ml" 133 3537 3584
type(
  t
)
ident(
  def e "AST.ml" 133 3537 3595 "AST.ml" 133 3537 3606
)
"AST.ml" 133 3537 3584 "AST.ml" 133 3537 3588
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 133 3537 3589 "AST.ml" 133 3537 3592
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 133 3537 3584 "AST.ml" 133 3537 3593
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 133 3537 3584 "AST.ml" 133 3537 3593
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 133 3537 3584 "AST.ml" 133 3537 3593
)
"AST.ml" 133 3537 3601 "AST.ml" 133 3537 3602
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 133 3537 3564 "AST.ml" 133 3537 3566
)
"AST.ml" 133 3537 3604 "AST.ml" 133 3537 3605
type(
  t
)
ident(
  int_ref e "AST.ml" 133 3537 3582 "AST.ml" 133 3537 3584
)
"AST.ml" 133 3537 3595 "AST.ml" 133 3537 3606
type(
  t
)
"AST.ml" 133 3537 3547 "AST.ml" 133 3537 3607
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  GT.string -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 133 3537 3595 "AST.ml" 133 3537 3606
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h
)
ident(
  def _1 "AST.ml" 133 3537 3547 "AST.ml" 133 3537 3607
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  GT.string
)
ident(
  def _2 "AST.ml" 133 3537 3547 "AST.ml" 133 3537 3607
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse ->
  (GT.string -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'h
)
ident(
  def _3 "AST.ml" 133 3537 3547 "AST.ml" 133 3537 3607
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 134 3608 3618 "AST.ml" 134 3608 3621
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 134 3608 3622 "AST.ml" 134 3608 3628
type(
  string
)
"AST.ml" 134 3608 3618 "AST.ml" 134 3608 3629
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 134 3608 3618 "AST.ml" 134 3608 3629
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 134 3608 3618 "AST.ml" 134 3608 3629
)
"AST.ml" 134 3608 3630 "AST.ml" 134 3608 3632
type(
  t
)
ident(
  def e "AST.ml" 134 3608 3643 "AST.ml" 134 3608 3649
)
"AST.ml" 134 3608 3632 "AST.ml" 134 3608 3636
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 134 3608 3637 "AST.ml" 134 3608 3640
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 134 3608 3632 "AST.ml" 134 3608 3641
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 134 3608 3632 "AST.ml" 134 3608 3641
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 134 3608 3632 "AST.ml" 134 3608 3641
)
"AST.ml" 134 3608 3648 "AST.ml" 134 3608 3649
type(
  t
)
ident(
  int_ref e "AST.ml" 134 3608 3630 "AST.ml" 134 3608 3632
)
"AST.ml" 134 3608 3643 "AST.ml" 134 3608 3649
type(
  t
)
"AST.ml" 134 3608 3618 "AST.ml" 134 3608 3650
call(
  stack
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 134 3608 3643 "AST.ml" 134 3608 3649
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h
)
ident(
  def _1 "AST.ml" 134 3608 3618 "AST.ml" 134 3608 3650
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 135 3651 3661 "AST.ml" 135 3651 3664
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 135 3651 3665 "AST.ml" 135 3651 3674
type(
  string
)
"AST.ml" 135 3651 3661 "AST.ml" 135 3651 3675
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 135 3651 3661 "AST.ml" 135 3651 3675
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 135 3651 3661 "AST.ml" 135 3651 3675
)
"AST.ml" 135 3651 3676 "AST.ml" 135 3651 3678
type(
  t
)
ident(
  def e "AST.ml" 135 3651 3689 "AST.ml" 135 3651 3698
)
"AST.ml" 135 3651 3678 "AST.ml" 135 3651 3682
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 135 3651 3683 "AST.ml" 135 3651 3686
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 135 3651 3678 "AST.ml" 135 3651 3687
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 135 3651 3678 "AST.ml" 135 3651 3687
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 135 3651 3678 "AST.ml" 135 3651 3687
)
"AST.ml" 135 3651 3697 "AST.ml" 135 3651 3698
type(
  t
)
ident(
  int_ref e "AST.ml" 135 3651 3676 "AST.ml" 135 3651 3678
)
"AST.ml" 135 3651 3689 "AST.ml" 135 3651 3698
type(
  t
)
"AST.ml" 135 3651 3661 "AST.ml" 135 3651 3699
call(
  stack
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 135 3651 3689 "AST.ml" 135 3651 3698
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'h
)
ident(
  def _1 "AST.ml" 135 3651 3661 "AST.ml" 135 3651 3699
)
type(
  'h
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse ->
  ('h -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 136 3700 3710 "AST.ml" 136 3700 3713
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  int_ref key "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 136 3700 3714 "AST.ml" 136 3700 3720
type(
  string
)
"AST.ml" 136 3700 3710 "AST.ml" 136 3700 3721
call(
  tail
)
type(
  ('e, 'h, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'h, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 136 3700 3710 "AST.ml" 136 3700 3721
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 136 3700 3710 "AST.ml" 136 3700 3721
)
"AST.ml" 136 3700 3723 "AST.ml" 136 3700 3727
type(
  t
)
"AST.ml" 136 3700 3710 "AST.ml" 136 3700 3728
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'h -> t
)
type(
  'h
)
ident(
  def _0 "AST.ml" 136 3700 3723 "AST.ml" 136 3700 3727
)
type(
  'h
)
type(
  ('h -> t) ->
  ('e, 'h, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
"AST.ml" 137 3729 3739 "AST.ml" 137 3729 3742
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 137 3729 3739 "AST.ml" 137 3729 3742
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 137 3729 3739 "AST.ml" 137 3729 3742
)
"AST.ml" 137 3729 3743 "AST.ml" 137 3729 3745
type(
  t
)
ident(
  def e "AST.ml" 137 3729 3756 "AST.ml" 137 3729 3763
)
"AST.ml" 137 3729 3745 "AST.ml" 137 3729 3749
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 137 3729 3750 "AST.ml" 137 3729 3753
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 137 3729 3745 "AST.ml" 137 3729 3754
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 137 3729 3745 "AST.ml" 137 3729 3754
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 137 3729 3745 "AST.ml" 137 3729 3754
)
"AST.ml" 137 3729 3762 "AST.ml" 137 3729 3763
type(
  t
)
ident(
  int_ref e "AST.ml" 137 3729 3743 "AST.ml" 137 3729 3745
)
"AST.ml" 137 3729 3756 "AST.ml" 137 3729 3763
type(
  t
)
"AST.ml" 137 3729 3739 "AST.ml" 137 3729 3764
call(
  stack
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 137 3729 3756 "AST.ml" 137 3729 3763
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'g
)
ident(
  def _1 "AST.ml" 137 3729 3739 "AST.ml" 137 3729 3764
)
type(
  'g
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('g -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 138 3773 3783 "AST.ml" 138 3773 3785
type(
  GT.string
)
ident(
  def n "AST.ml" 138 3773 3783 "AST.ml" 148 4133 4144
)
"AST.ml" 138 3773 3785 "AST.ml" 138 3773 3790
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse
)
ident(
  int_ref ident "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 138 3773 3791 "AST.ml" 138 3773 3793
type(
  t option
)
ident(
  def s "AST.ml" 139 3814 3826 "AST.ml" 147 4038 4132
)
"AST.ml" 138 3773 3795 "AST.ml" 138 3773 3799
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 138 3773 3795 "AST.ml" 138 3773 3799
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 138 3773 3795 "AST.ml" 138 3773 3799
)
"AST.ml" 138 3773 3800 "AST.ml" 138 3773 3804
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 138 3773 3805 "AST.ml" 138 3773 3808
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 138 3773 3800 "AST.ml" 138 3773 3809
call(
  tail
)
type(
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 138 3773 3800 "AST.ml" 138 3773 3809
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 138 3773 3800 "AST.ml" 138 3773 3809
)
"AST.ml" 138 3773 3794 "AST.ml" 138 3773 3809
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('g -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 138 3773 3793 "AST.ml" 138 3773 3811
call(
  stack
)
type(
  ('e, t option, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t option, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.opt
)
"AST.ml" 140 3830 3850 "AST.ml" 140 3830 3851
type(
  t option
)
ident(
  int_ref s "AST.ml" 138 3773 3791 "AST.ml" 138 3773 3793
)
"AST.ml" 141 3857 3866 "AST.ml" 141 3857 3870
type(
  t option
)
"AST.ml" 142 3874 3898 "AST.ml" 142 3874 3908
type(
  GT.string ->
  (GT.string * [ `Arg | `Def of t ]) list -> [ `Arg | `Def of t ]
)
ident(
  ext_ref List.assoc
)
"AST.ml" 142 3874 3909 "AST.ml" 142 3874 3910
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 138 3773 3783 "AST.ml" 138 3773 3785
)
"AST.ml" 142 3874 3911 "AST.ml" 142 3874 3914
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 142 3874 3898 "AST.ml" 142 3874 3914
call(
  stack
)
type(
  [ `Arg | `Def of t ]
)
"AST.ml" 143 3920 3945 "AST.ml" 143 3920 3946
type(
  t
)
ident(
  def e "AST.ml" 143 3920 3950 "AST.ml" 143 3920 3951
)
"AST.ml" 143 3920 3940 "AST.ml" 143 3920 3946
type(
  [ `Arg | `Def of t ]
)
"AST.ml" 143 3920 3950 "AST.ml" 143 3920 3951
type(
  t
)
ident(
  int_ref e "AST.ml" 143 3920 3945 "AST.ml" 143 3920 3946
)
"AST.ml" 144 3952 3972 "AST.ml" 144 3952 3976
type(
  [ `Arg | `Def of t ]
)
"AST.ml" 144 3952 3986 "AST.ml" 144 3952 3987
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 138 3773 3783 "AST.ml" 138 3773 3785
)
"AST.ml" 144 3952 3982 "AST.ml" 144 3952 3987
type(
  t
)
"AST.ml" 142 3874 3891 "AST.ml" 145 3988 4006
type(
  t
)
"AST.ml" 146 4007 4021 "AST.ml" 146 4007 4022
type(
  t
)
ident(
  def e "AST.ml" 146 4007 4026 "AST.ml" 146 4007 4037
)
"AST.ml" 146 4007 4016 "AST.ml" 146 4007 4022
type(
  t option
)
"AST.ml" 146 4007 4032 "AST.ml" 146 4007 4033
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 138 3773 3783 "AST.ml" 138 3773 3785
)
"AST.ml" 146 4007 4035 "AST.ml" 146 4007 4036
type(
  t
)
ident(
  int_ref e "AST.ml" 146 4007 4021 "AST.ml" 146 4007 4022
)
"AST.ml" 146 4007 4026 "AST.ml" 146 4007 4037
type(
  t
)
"AST.ml" 140 3830 3844 "AST.ml" 146 4007 4037
type(
  t
)
"AST.ml" 147 4038 4055 "AST.ml" 147 4038 4064
type(
  exn
)
"AST.ml" 147 4038 4068 "AST.ml" 147 4038 4073
type(
  exn -> t
)
ident(
  ext_ref Pervasives.raise
)
"AST.ml" 147 4038 4088 "AST.ml" 147 4038 4102
type(
  (GT.string -> GT.string, unit, GT.string) format -> GT.string -> GT.string
)
ident(
  ext_ref Printf.sprintf
)
"AST.ml" 147 4038 4103 "AST.ml" 147 4038 4128
type(
  (GT.string -> GT.string, unit, GT.string) format
)
"AST.ml" 147 4038 4129 "AST.ml" 147 4038 4130
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 138 3773 3783 "AST.ml" 138 3773 3785
)
"AST.ml" 147 4038 4087 "AST.ml" 147 4038 4131
call(
  stack
)
type(
  GT.string
)
"AST.ml" 147 4038 4074 "AST.ml" 147 4038 4132
type(
  exn
)
"AST.ml" 147 4038 4068 "AST.ml" 147 4038 4132
type(
  t
)
"AST.ml" 139 3814 3826 "AST.ml" 147 4038 4132
type(
  t
)
"AST.ml" 138 3773 3783 "AST.ml" 148 4133 4144
call(
  stack
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  GT.string -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t option -> t
)
type(
  t option
)
ident(
  def _0 "AST.ml" 139 3814 3826 "AST.ml" 147 4038 4132
)
type(
  (t option -> t) ->
  ('e, t option, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  GT.string
)
ident(
  def _1 "AST.ml" 138 3773 3783 "AST.ml" 148 4133 4144
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse ->
  (GT.string -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 149 4145 4155 "AST.ml" 149 4145 4159
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 149 4145 4155 "AST.ml" 149 4145 4159
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 149 4145 4155 "AST.ml" 149 4145 4159
)
"AST.ml" 149 4145 4160 "AST.ml" 149 4145 4163
type(
  GT.string list
)
ident(
  def ns "AST.ml" 149 4145 4155 "AST.ml" 151 4284 4295
)
"AST.ml" 149 4145 4163 "AST.ml" 149 4145 4168
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse
)
ident(
  int_ref ident "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 149 4145 4163 "AST.ml" 149 4145 4169
call(
  stack
)
type(
  ('e, GT.string list, 'f) Ostap.Combinators.parse
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse ->
  ('e, GT.string list, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.some
)
"AST.ml" 149 4145 4170 "AST.ml" 149 4145 4173
call(
  tail
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse
)
type(
  ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  GT.string
)
type(
  GT.string -> ('e, 'g, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 149 4145 4170 "AST.ml" 149 4145 4173
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 149 4145 4170 "AST.ml" 149 4145 4173
)
"AST.ml" 149 4145 4174 "AST.ml" 149 4145 4176
type(
  t
)
ident(
  def e "AST.ml" 150 4223 4235 "AST.ml" 150 4223 4283
)
"AST.ml" 149 4145 4176 "AST.ml" 149 4145 4180
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  int_ref expr "AST.ml" 125 3163 3179 "AST.ml" 125 3163 3183
)
"AST.ml" 149 4145 4181 "AST.ml" 149 4145 4189
type(
  (GT.string -> GT.string * [ `Arg | `Def of t ]) ->
  GT.string list -> (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  ext_ref List.map
)
"AST.ml" 149 4145 4195 "AST.ml" 149 4145 4196
type(
  GT.string
)
ident(
  def n "AST.ml" 149 4145 4200 "AST.ml" 149 4145 4209
)
"AST.ml" 149 4145 4201 "AST.ml" 149 4145 4202
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 149 4145 4195 "AST.ml" 149 4145 4196
)
"AST.ml" 149 4145 4204 "AST.ml" 149 4145 4208
type(
  [ `Arg | `Def of t ]
)
"AST.ml" 149 4145 4200 "AST.ml" 149 4145 4209
type(
  GT.string * [ `Arg | `Def of t ]
)
"AST.ml" 149 4145 4190 "AST.ml" 149 4145 4210
type(
  GT.string -> GT.string * [ `Arg | `Def of t ]
)
"AST.ml" 149 4145 4211 "AST.ml" 149 4145 4213
type(
  GT.string list
)
ident(
  int_ref ns "AST.ml" 149 4145 4160 "AST.ml" 149 4145 4163
)
"AST.ml" 149 4145 4181 "AST.ml" 149 4145 4213
call(
  stack
)
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
"AST.ml" 149 4145 4216 "AST.ml" 149 4145 4219
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  int_ref env "AST.ml" 125 3163 3185 "AST.ml" 125 3163 3188
)
"AST.ml" 149 4145 4181 "AST.ml" 149 4145 4219
call(
  stack
)
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  (GT.string * [ `Arg | `Def of t ]) list ->
  (GT.string * [ `Arg | `Def of t ]) list
)
ident(
  ext_ref Pervasives.( @ )
)
"AST.ml" 149 4145 4176 "AST.ml" 149 4145 4220
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 149 4145 4176 "AST.ml" 149 4145 4220
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 149 4145 4176 "AST.ml" 149 4145 4220
)
"AST.ml" 150 4223 4235 "AST.ml" 150 4223 4250
type(
  (GT.string -> t -> t) -> GT.string list -> t -> t
)
ident(
  ext_ref List.fold_right
)
"AST.ml" 150 4223 4256 "AST.ml" 150 4223 4257
type(
  GT.string
)
ident(
  def n "AST.ml" 150 4223 4258 "AST.ml" 150 4223 4277
)
"AST.ml" 150 4223 4258 "AST.ml" 150 4223 4261
type(
  t
)
ident(
  def acc "AST.ml" 150 4223 4265 "AST.ml" 150 4223 4277
)
"AST.ml" 150 4223 4270 "AST.ml" 150 4223 4271
type(
  GT.string
)
ident(
  int_ref n "AST.ml" 150 4223 4256 "AST.ml" 150 4223 4257
)
"AST.ml" 150 4223 4273 "AST.ml" 150 4223 4276
type(
  t
)
ident(
  int_ref acc "AST.ml" 150 4223 4258 "AST.ml" 150 4223 4261
)
"AST.ml" 150 4223 4265 "AST.ml" 150 4223 4277
type(
  t
)
"AST.ml" 150 4223 4258 "AST.ml" 150 4223 4277
type(
  t -> t
)
"AST.ml" 150 4223 4251 "AST.ml" 150 4223 4278
type(
  GT.string -> t -> t
)
"AST.ml" 150 4223 4279 "AST.ml" 150 4223 4281
type(
  GT.string list
)
ident(
  int_ref ns "AST.ml" 149 4145 4160 "AST.ml" 149 4145 4163
)
"AST.ml" 150 4223 4282 "AST.ml" 150 4223 4283
type(
  t
)
ident(
  int_ref e "AST.ml" 149 4145 4174 "AST.ml" 149 4145 4176
)
"AST.ml" 150 4223 4235 "AST.ml" 150 4223 4283
call(
  tail
)
type(
  t
)
"AST.ml" 149 4145 4155 "AST.ml" 151 4284 4295
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  tail
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  GT.string list -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'g -> ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  t -> t
)
type(
  t
)
ident(
  def _0 "AST.ml" 150 4223 4235 "AST.ml" 150 4223 4283
)
type(
  (t -> t) ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  'g
)
ident(
  def _1 "AST.ml" 149 4145 4155 "AST.ml" 151 4284 4295
)
type(
  'g
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('g -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  GT.string list
)
ident(
  def _2 "AST.ml" 149 4145 4155 "AST.ml" 151 4284 4295
)
type(
  ('e, GT.string list, 'f) Ostap.Combinators.parse ->
  (GT.string list -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
type(
  'g
)
ident(
  def _3 "AST.ml" 149 4145 4155 "AST.ml" 151 4284 4295
)
type(
  'g
)
type(
  ('e, 'g, 'f) Ostap.Combinators.parse ->
  ('g -> ('e, t, 'f) Ostap.Combinators.parse) ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 126 3191 3201 "AST.ml" 151 4284 4295
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
type(
  ('e, t, 'f) Ostap.Combinators.parse ->
  ('e, t, 'f) Ostap.Combinators.parse -> ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.alt
)
"AST.ml" 125 3163 3171 "AST.ml" 151 4284 4295
call(
  tail
)
type(
  ((GT.string * [ `Arg | `Def of t ]) list ->
   'e -> ('e, t, 'f) Ostap.Combinators.result) ->
  (GT.string * [ `Arg | `Def of t ]) list ->
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  ('e, t, 'f) Ostap.Combinators.parse
)
type(
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
type(
  ('e, t, 'f) Ostap.Combinators.result
)
type(
  'e
)
ident(
  int_ref _ostap_stream "AST.ml" 125 3163 3171 "AST.ml" 151 4284 4295
)
type(
  'e
)
ident(
  def _ostap_stream "AST.ml" 125 3163 3171 "AST.ml" 151 4284 4295
)
"AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
type(
  ((GT.string * [ `Arg | `Def of t ]) list ->
   'e -> ('e, t, 'f) Ostap.Combinators.result) ->
  (GT.string * [ `Arg | `Def of t ]) list ->
  ('e, t, 'f) Ostap.Combinators.parse
)
ident(
  def primary "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  def apps "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  def expr "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'e -> ('e, t, 'f) Ostap.Combinators.result
)
ident(
  def def "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
type(
  string -> 'e -> ('e, 'h, 'f) Ostap.Combinators.result
)
ident(
  def key "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
type(
  ('e, GT.string, 'f) Ostap.Combinators.parse
)
ident(
  def ident "AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
)
"AST.ml" 153 4307 4313 "AST.ml" 153 4307 4316
type(
  (GT.string * [ `Arg | `Def of t ]) list ->
  'a -> ('a, t, 'b) Ostap.Combinators.result
)
ident(
  int_ref def "AST.ml" 90 2160 2168 "AST.ml" 151 4284 4295
)
"AST.ml" 153 4307 4317 "AST.ml" 153 4307 4319
type(
  (GT.string * [ `Arg | `Def of t ]) list
)
"AST.ml" 153 4307 4320 "AST.ml" 153 4307 4321
type(
  'a
)
ident(
  int_ref s "AST.ml" 88 2122 2137 "AST.ml" 88 2122 2138
)
"AST.ml" 153 4307 4313 "AST.ml" 153 4307 4321
call(
  tail
)
type(
  ('a, t, 'b) Ostap.Combinators.result
)
"AST.ml" 89 2142 2148 "AST.ml" 153 4307 4321
type(
  ('a, t, 'b) Ostap.Combinators.result
)
"AST.ml" 88 2122 2137 "AST.ml" 153 4307 4321
type(
  'a -> ('a, t, 'b) Ostap.Combinators.result
)
"AST.ml" 155 4323 4331 "AST.ml" 155 4323 4336
type(
  (< getEOF : ('i, 'j, < add : 'k -> 'k; .. > as 'k) Ostap.Combinators.result;
     getIDENT : ('i, Ostap.Matcher.Token.t, 'k) Ostap.Combinators.result;
     getLITERAL : ('i, Ostap.Matcher.Token.t, 'k) Ostap.Combinators.result;
     look : GT.string -> ('i, 'l, 'k) Ostap.Combinators.result;
     regexp : string -> string -> ('i, 'm, 'k) Ostap.Combinators.result; .. >
   as 'i) ->
  ('i, t, 'k) Ostap.Combinators.result
)
ident(
  def parse "AST.ml" 155 4323 4362 "AST.ml" 157 4368 4373
)
"AST.ml" 155 4323 4337 "AST.ml" 155 4323 4338
type(
  'i
)
ident(
  def s "AST.ml" 155 4323 4341 "AST.ml" 155 4323 4362
)
"AST.ml" 155 4323 4348 "AST.ml" 155 4323 4354
type(
  ('i, t, 'k) Ostap.Combinators.parse
)
ident(
  int_ref hparse "AST.ml" 88 2122 2130 "AST.ml" 88 2122 2136
)
"AST.ml" 155 4323 4356 "AST.ml" 155 4323 4359
call(
  tail
)
type(
  ('i, 'j, 'k) Ostap.Combinators.parse
)
type(
  ('i, 'j, 'k) Ostap.Combinators.result
)
type(
  'i
)
ident(
  int_ref _ostap_stream "AST.ml" 155 4323 4356 "AST.ml" 155 4323 4359
)
type(
  'i
)
ident(
  def _ostap_stream "AST.ml" 155 4323 4356 "AST.ml" 155 4323 4359
)
"AST.ml" 155 4323 4348 "AST.ml" 155 4323 4359
call(
  tail
)
type(
  t -> ('i, t, 'k) Ostap.Combinators.parse
)
type(
  ('i, t, 'k) Ostap.Combinators.parse
)
type(
  'j -> t
)
type(
  t
)
ident(
  int_ref _0 "AST.ml" 155 4323 4348 "AST.ml" 155 4323 4359
)
type(
  'j
)
type(
  ('j -> t) ->
  ('i, 'j, 'k) Ostap.Combinators.parse -> ('i, t, 'k) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.map
)
type(
  t
)
ident(
  def _0 "AST.ml" 155 4323 4348 "AST.ml" 155 4323 4359
)
type(
  t
)
type(
  ('i, t, 'k) Ostap.Combinators.parse ->
  (t -> ('i, t, 'k) Ostap.Combinators.parse) ->
  ('i, t, 'k) Ostap.Combinators.parse
)
ident(
  ext_ref Ostap.Combinators.seq
)
"AST.ml" 155 4323 4341 "AST.ml" 155 4323 4360
call(
  tail
)
type(
  'i -> ('i, t, 'k) Ostap.Combinators.result
)
type(
  ('i, t, 'k) Ostap.Combinators.result
)
type(
  'i
)
ident(
  int_ref _ostap_stream "AST.ml" 155 4323 4341 "AST.ml" 155 4323 4360
)
type(
  'i
)
ident(
  def _ostap_stream "AST.ml" 155 4323 4341 "AST.ml" 155 4323 4360
)
"AST.ml" 155 4323 4361 "AST.ml" 155 4323 4362
type(
  'i
)
ident(
  int_ref s "AST.ml" 155 4323 4337 "AST.ml" 155 4323 4338
)
"AST.ml" 155 4323 4341 "AST.ml" 155 4323 4362
type(
  ('i, t, 'k) Ostap.Combinators.result
)
"AST.ml" 155 4323 4337 "AST.ml" 155 4323 4362
type(
  'i -> ('i, t, 'k) Ostap.Combinators.result
)
"AST.ml" 159 4375 4379 "AST.ml" 159 4375 4387
type(
  string -> (t, Ostap.Msg.t) Checked.t
)
ident(
  def fromFile "AST.ml" 162 4453 4453 "AST.ml" 1 0 -1
)
"AST.ml" 159 4375 4388 "AST.ml" 159 4375 4393
type(
  string
)
ident(
  def fname "AST.ml" 160 4396 4398 "AST.ml" 160 4396 4451
)
"AST.ml" 160 4396 4398 "AST.ml" 160 4396 4414
type(
  (Lexer.t -> (Lexer.t, t, Ostap.Reason.t) Ostap.Combinators.result) ->
  string -> (t, Ostap.Msg.t) Checked.t
)
ident(
  int_ref Lexer.fromString "AST.ml" 73 1689 1697 "AST.ml" 73 1689 1707
)
"AST.ml" 160 4396 4415 "AST.ml" 160 4396 4427
type(
  Lexer.t -> (Lexer.t, t, Ostap.Reason.t) Ostap.Combinators.result
)
ident(
  int_ref Parser.parse "AST.ml" 155 4323 4331 "AST.ml" 155 4323 4336
)
"AST.ml" 160 4396 4429 "AST.ml" 160 4396 4444
type(
  string -> string
)
ident(
  ext_ref Ostap.Util.read
)
"AST.ml" 160 4396 4445 "AST.ml" 160 4396 4450
type(
  string
)
ident(
  int_ref fname "AST.ml" 159 4375 4388 "AST.ml" 159 4375 4393
)
"AST.ml" 160 4396 4428 "AST.ml" 160 4396 4451
call(
  stack
)
type(
  string
)
"AST.ml" 160 4396 4398 "AST.ml" 160 4396 4451
call(
  tail
)
type(
  (t, Ostap.Msg.t) Checked.t
)
"AST.ml" 159 4375 4388 "AST.ml" 160 4396 4451
type(
  string -> (t, Ostap.Msg.t) Checked.t
)
"AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
type(
  (('inh, 'syn) #e_tt -> 'inh -> e -> 'syn, < show : e -> GT.string >) GT.t
)
type(
  < show : e -> GT.string >
)
type(
  < show : e -> GT.string > -> e -> GT.string
)
type(
  e -> GT.string
)
type(
  e -> GT.string
)
type(
  GT.unit
)
type(
  show_e_t
)
type(
  (show_e_t -> GT.unit -> e -> GT.string, GT.unit) GT.t
)
ident(
  int_ref e "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (show_e_t -> GT.unit -> e -> GT.string, GT.unit) GT.t ->
  show_e_t -> GT.unit -> e -> GT.string
)
ident(
  ext_ref GT.transform
)
type(
  < show : e -> GT.string >
)
type(
  (('inh, 'syn) #e_tt as 'a) -> 'inh -> e -> 'syn
)
type(
  ('a -> 'inh -> e -> 'syn, GT.unit) GT.t
)
ident(
  int_ref e "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('a -> 'inh -> e -> 'syn, < show : e -> GT.string >) GT.t
)
ident(
  def e "AST.ml" 185 4887 4895 "AST.ml" 206 5293 5302
)
type(
  < c_App : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_Assn : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_BinopL : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string ->
               (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_BinopR : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string ->
               t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_DelLoc : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_DelSema : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Deref : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Grab : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Hole : GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_If : GT.unit ->
           (GT.unit, e, GT.string, <  >) GT.a ->
           (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string;
    c_ParL : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_ParR : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Release : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Seq : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_Unop : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    t_e : GT.unit -> e -> GT.string; .. > ->
  unit
)
type(
  unit
)
type(
  show_e_t
)
type(
  < c_App : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_Assn : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_BinopL : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string ->
               (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_BinopR : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string ->
               t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_DelLoc : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_DelSema : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Deref : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Grab : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Hole : GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_If : GT.unit ->
           (GT.unit, e, GT.string, <  >) GT.a ->
           (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string;
    c_ParL : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_ParR : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Release : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Seq : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_Unop : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    t_e : GT.unit -> e -> GT.string; .. >
  as 'b
)
ident(
  int_ref this "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  show_e_t ref
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  show_e_t ref -> show_e_t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
type(
  '_c
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'b
)
type(
  'd
)
type(
  unit ref
)
type(
  unit
)
type(
  unit -> unit ref
)
ident(
  ext_ref Pervasives.ref
)
type(
  unit ref -> 'd
)
ident(
  ext_ref Obj.magic
)
type(
  'd
)
type(
  < c_App : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_Assn : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_BinopL : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string ->
               (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_BinopR : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string ->
               t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_DelLoc : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_DelSema : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Deref : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Grab : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Hole : GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_If : GT.unit ->
           (GT.unit, e, GT.string, <  >) GT.a ->
           (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string;
    c_ParL : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_ParR : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Release : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    c_Seq : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
    c_Unop : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
    t_e : GT.unit -> e -> GT.string; .. > ->
  GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (< c_App : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
     c_Assn : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_BinopL : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                GT.string ->
                (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
     c_BinopR : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                GT.string ->
                t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_DelLoc : GT.unit ->
                (GT.unit, e, GT.string, <  >) GT.a ->
                GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_DelSema : GT.unit ->
                 (GT.unit, e, GT.string, <  >) GT.a ->
                 GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_Deref : GT.unit ->
               (GT.unit, e, GT.string, <  >) GT.a ->
               (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_Grab : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_Hole : GT.unit -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_If : GT.unit ->
            (GT.unit, e, GT.string, <  >) GT.a ->
            (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string;
     c_ParL : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
     c_ParR : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_Release : GT.unit ->
                 (GT.unit, e, GT.string, <  >) GT.a ->
                 (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     c_Seq : GT.unit ->
             (GT.unit, e, GT.string, <  >) GT.a ->
             (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string;
     c_Unop : GT.unit ->
              (GT.unit, e, GT.string, <  >) GT.a ->
              GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string;
     t_e : GT.unit -> e -> GT.string; .. >
   as 'e) ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  t -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_f, '_g) _#t_tt -> '_f -> t -> '_g, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  t -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_h, '_i) _#t_tt -> '_h -> t -> '_i, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_j -> GT.string -> '_j;
    foldr : '_j -> GT.string -> '_j; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_k, '_l) _#GT.string_tt -> '_k -> GT.string -> '_l,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_j -> GT.string -> '_j;
     foldr : '_j -> GT.string -> '_j; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  t
)
ident(
  def p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_m, '_n) _#t_tt -> '_m -> t -> '_n, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_o -> GT.string -> '_o;
    foldr : '_o -> GT.string -> '_o; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_p, '_q) _#GT.string_tt -> '_p -> GT.string -> '_q,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_o -> GT.string -> '_o;
     foldr : '_o -> GT.string -> '_o; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool; foldl : '_r -> GT.string -> '_r;
    foldr : '_r -> GT.string -> '_r; gmap : GT.string -> GT.string;
    html : GT.string -> HTML.viewer; show : GT.string -> GT.string >
)
type(
  (('_s, '_t) _#GT.string_tt -> '_s -> GT.string -> '_t,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool; foldl : '_r -> GT.string -> '_r;
     foldr : '_r -> GT.string -> '_r; gmap : GT.string -> GT.string;
     html : GT.string -> HTML.viewer; show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> t -> t -> GT.string
)
type(
  t -> t -> GT.string
)
type(
  t -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_u, '_v) _#t_tt -> '_u -> t -> '_v, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_w, '_x) _#t_tt -> '_w -> t -> '_x, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  t
)
ident(
  def p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  t -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_y, '_z) _#t_tt -> '_y -> t -> '_z, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool;
    foldl : '_a1 -> GT.string -> '_a1; foldr : '_a1 -> GT.string -> '_a1;
    gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
    show : GT.string -> GT.string >
)
type(
  (('_b1, '_c1) _#GT.string_tt -> '_b1 -> GT.string -> '_c1,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool;
     foldl : '_a1 -> GT.string -> '_a1; foldr : '_a1 -> GT.string -> '_a1;
     gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
     show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> t -> GT.string
)
type(
  t -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_d1, '_e1) _#t_tt -> '_d1 -> t -> '_e1, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  t -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  t -> GT.string
)
type(
  < show : t -> GT.string >
)
type(
  (('_f1, '_g1) _#t_tt -> '_f1 -> t -> '_g1, < show : t -> GT.string >) GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
type(
  (t -> GT.string) -> unit -> t -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool;
    foldl : '_h1 -> GT.string -> '_h1; foldr : '_h1 -> GT.string -> '_h1;
    gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
    show : GT.string -> GT.string >
)
type(
  (('_i1, '_j1) _#GT.string_tt -> '_i1 -> GT.string -> '_j1,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool;
     foldl : '_h1 -> GT.string -> '_h1; foldr : '_h1 -> GT.string -> '_h1;
     gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
     show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e ->
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a ->
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string -> (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string
)
type(
  GT.string
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  unit
)
type(
  GT.string -> GT.string
)
type(
  < compare : GT.string -> GT.string -> GT.comparison;
    eq : GT.string -> GT.string -> GT.bool;
    foldl : '_k1 -> GT.string -> '_k1; foldr : '_k1 -> GT.string -> '_k1;
    gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
    show : GT.string -> GT.string >
)
type(
  (('_l1, '_m1) _#GT.string_tt -> '_l1 -> GT.string -> '_m1,
   < compare : GT.string -> GT.string -> GT.comparison;
     eq : GT.string -> GT.string -> GT.bool;
     foldl : '_k1 -> GT.string -> '_k1; foldr : '_k1 -> GT.string -> '_k1;
     gmap : GT.string -> GT.string; html : GT.string -> HTML.viewer;
     show : GT.string -> GT.string >)
  GT.t
)
ident(
  ext_ref GT.string
)
type(
  (GT.string -> GT.string) -> unit -> GT.string -> GT.string
)
ident(
  ext_ref GT.lift
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  (GT.unit, e, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'e
)
type(
  'n1
)
type(
  < c_App : 'inh0 ->
            ('inh0, e, 'syn0, <  >) GT.a ->
            ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_Assn : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_BinopL : 'inh0 ->
               ('inh0, e, 'syn0, <  >) GT.a ->
               GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_BinopR : 'inh0 ->
               ('inh0, e, 'syn0, <  >) GT.a ->
               GT.string -> t -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_DelLoc : 'inh0 ->
               ('inh0, e, 'syn0, <  >) GT.a ->
               GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_DelSema : 'inh0 ->
                ('inh0, e, 'syn0, <  >) GT.a ->
                GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Deref : 'inh0 ->
              ('inh0, e, 'syn0, <  >) GT.a ->
              ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Grab : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Hole : 'inh0 -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_If : 'inh0 ->
           ('inh0, e, 'syn0, <  >) GT.a ->
           ('inh0, e, 'syn0, <  >) GT.a -> t -> t -> 'syn0;
    c_ParL : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_ParR : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             t -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Release : 'inh0 ->
                ('inh0, e, 'syn0, <  >) GT.a ->
                ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Seq : 'inh0 ->
            ('inh0, e, 'syn0, <  >) GT.a ->
            ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_Unop : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    t_e : 'inh0 -> e -> 'syn0; .. > ->
  'inh0 -> e -> 'syn0
)
type(
  'inh0 -> e -> 'syn0
)
type(
  'inh0 -> e -> 'syn0
)
type(
  < c_App : 'inh0 ->
            ('inh0, e, 'syn0, <  >) GT.a ->
            ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_Assn : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_BinopL : 'inh0 ->
               ('inh0, e, 'syn0, <  >) GT.a ->
               GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_BinopR : 'inh0 ->
               ('inh0, e, 'syn0, <  >) GT.a ->
               GT.string -> t -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_DelLoc : 'inh0 ->
               ('inh0, e, 'syn0, <  >) GT.a ->
               GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_DelSema : 'inh0 ->
                ('inh0, e, 'syn0, <  >) GT.a ->
                GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Deref : 'inh0 ->
              ('inh0, e, 'syn0, <  >) GT.a ->
              ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Grab : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Hole : 'inh0 -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_If : 'inh0 ->
           ('inh0, e, 'syn0, <  >) GT.a ->
           ('inh0, e, 'syn0, <  >) GT.a -> t -> t -> 'syn0;
    c_ParL : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_ParR : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             t -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Release : 'inh0 ->
                ('inh0, e, 'syn0, <  >) GT.a ->
                ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    c_Seq : 'inh0 ->
            ('inh0, e, 'syn0, <  >) GT.a ->
            ('inh0, e, 'syn0, <  >) GT.a -> t -> 'syn0;
    c_Unop : 'inh0 ->
             ('inh0, e, 'syn0, <  >) GT.a ->
             GT.string -> ('inh0, e, 'syn0, <  >) GT.a -> 'syn0;
    t_e : 'inh0 -> e -> 'syn0; .. >
  as 'o1
)
ident(
  int_ref this "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('o1 -> 'inh0 -> e -> 'syn0, GT.unit) GT.t
)
ident(
  int_ref e "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('o1 -> 'inh0 -> e -> 'syn0, GT.unit) GT.t -> 'o1 -> 'inh0 -> e -> 'syn0
)
ident(
  ext_ref GT.transform
)
type(
  'o1
)
type(
  (('inh1, 'syn1) #e_tt -> 'inh1 -> e -> 'syn1, GT.unit) GT.t
)
type(
  ((('inh1, 'syn1) #e_tt as 'p1) -> 'inh1 -> e -> 'syn1, GT.unit) GT.t
)
type(
  GT.unit
)
type(
  'p1 -> 'inh1 -> e -> 'syn1
)
ident(
  int_ref e_gcata "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  < c_App : 'q1 ->
            ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_Assn : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a ->
             GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_BinopL : 'q1 ->
               ('q1, e, 'r1, <  >) GT.a ->
               GT.string -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_BinopR : 'q1 ->
               ('q1, e, 'r1, <  >) GT.a ->
               GT.string -> t -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_DelLoc : 'q1 ->
               ('q1, e, 'r1, <  >) GT.a ->
               GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_DelSema : 'q1 ->
                ('q1, e, 'r1, <  >) GT.a ->
                GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Deref : 'q1 ->
              ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Grab : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Hole : 'q1 -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_If : 'q1 ->
           ('q1, e, 'r1, <  >) GT.a ->
           ('q1, e, 'r1, <  >) GT.a -> t -> t -> 'r1;
    c_ParL : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_ParR : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a -> t -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Release : 'q1 ->
                ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Seq : 'q1 ->
            ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_Unop : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a ->
             GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    .. > ->
  'q1 -> e -> 'r1
)
type(
  'q1 -> e -> 'r1
)
type(
  e -> 'r1
)
type(
  'r1
)
type(
  'r1
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a -> GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  < c_App : 'q1 ->
            ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_Assn : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a ->
             GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_BinopL : 'q1 ->
               ('q1, e, 'r1, <  >) GT.a ->
               GT.string -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_BinopR : 'q1 ->
               ('q1, e, 'r1, <  >) GT.a ->
               GT.string -> t -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_DelLoc : 'q1 ->
               ('q1, e, 'r1, <  >) GT.a ->
               GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_DelSema : 'q1 ->
                ('q1, e, 'r1, <  >) GT.a ->
                GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Deref : 'q1 ->
              ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Grab : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Hole : 'q1 -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_If : 'q1 ->
           ('q1, e, 'r1, <  >) GT.a ->
           ('q1, e, 'r1, <  >) GT.a -> t -> t -> 'r1;
    c_ParL : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_ParR : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a -> t -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Release : 'q1 ->
                ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    c_Seq : 'q1 ->
            ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1;
    c_Unop : 'q1 ->
             ('q1, e, 'r1, <  >) GT.a ->
             GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1;
    .. >
  as 's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a -> GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  t
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> t -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a -> GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  t
)
ident(
  int_ref p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> t -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a -> GT.string -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a ->
  GT.string -> t -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  t
)
ident(
  int_ref p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  GT.string
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 ->
  ('q1, e, 'r1, <  >) GT.a ->
  GT.string -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  t
)
ident(
  int_ref p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> ('q1, e, 'r1, <  >) GT.a -> t -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'r1
)
type(
  ('q1, e, 'r1, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  int_ref self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('q1 -> e -> 'r1) -> e -> <  > -> ('q1, e, 'r1, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'q1
)
ident(
  int_ref inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> ('q1, e, 'r1, <  >) GT.a -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  t
)
ident(
  def p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  def p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  t
)
ident(
  def p2 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  GT.string
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  t
)
ident(
  def p1 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  def p0 "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
type(
  e
)
ident(
  int_ref subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  <  >
)
type(
  <  >
)
type(
  'q1 -> e -> 'r1
)
type(
  's1
)
ident(
  int_ref trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  's1 -> 'q1 -> e -> 'r1
)
ident(
  int_ref e_gcata "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  <  >
)
ident(
  def tpo "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1 -> e -> 'r1
)
ident(
  def self "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  e
)
ident(
  def subj "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  'q1
)
ident(
  def inh "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  's1
)
ident(
  def trans "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  's1 -> 'q1 -> e -> 'r1
)
ident(
  def e_gcata "AST.ml" 168 4517 4518 "AST.ml" 183 4849 4885
)
type(
  ('p1 -> 'inh1 -> e -> 'syn1, GT.unit) GT.t
)
ident(
  def e "AST.ml" 168 4517 4518 "AST.ml" 206 5293 5302
)
"AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
call(
  tail
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
call(
  tail
)
call(
  stack
)
call(
  stack
)
type(
  (('inh2, 'syn2) #path_tt -> 'inh2 -> path -> 'syn2,
   < show : path -> GT.string >)
  GT.t
)
type(
  < show : path -> GT.string >
)
type(
  < show : path -> GT.string > -> path -> GT.string
)
type(
  path -> GT.string
)
type(
  path -> GT.string
)
type(
  GT.unit
)
type(
  show_path_t
)
type(
  (show_path_t -> GT.unit -> path -> GT.string, GT.unit) GT.t
)
ident(
  int_ref path "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  (show_path_t -> GT.unit -> path -> GT.string, GT.unit) GT.t ->
  show_path_t -> GT.unit -> path -> GT.string
)
ident(
  ext_ref GT.transform
)
type(
  < show : path -> GT.string >
)
type(
  (('inh2, 'syn2) #path_tt as 't1) -> 'inh2 -> path -> 'syn2
)
type(
  ('t1 -> 'inh2 -> path -> 'syn2, GT.unit) GT.t
)
ident(
  int_ref path "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('t1 -> 'inh2 -> path -> 'syn2, < show : path -> GT.string >) GT.t
)
ident(
  def path "AST.ml" 187 4945 4953 "AST.ml" 206 5293 5302
)
type(
  < c_L : GT.unit ->
          (GT.unit, path, GT.string, <  >) GT.a ->
          (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    c_N : GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    c_R : GT.unit ->
          (GT.unit, path, GT.string, <  >) GT.a ->
          (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    t_path : GT.unit -> path -> GT.string; .. > ->
  unit
)
type(
  unit
)
type(
  show_path_t
)
type(
  < c_L : GT.unit ->
          (GT.unit, path, GT.string, <  >) GT.a ->
          (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    c_N : GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    c_R : GT.unit ->
          (GT.unit, path, GT.string, <  >) GT.a ->
          (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    t_path : GT.unit -> path -> GT.string; .. >
  as 'u1
)
ident(
  int_ref this "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  show_path_t ref
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  show_path_t ref -> show_path_t -> unit
)
ident(
  ext_ref Pervasives.( := )
)
type(
  '_v1
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'u1
)
type(
  'w1
)
type(
  unit ref
)
type(
  unit
)
type(
  unit -> unit ref
)
ident(
  ext_ref Pervasives.ref
)
type(
  unit ref -> 'w1
)
ident(
  ext_ref Obj.magic
)
type(
  'w1
)
type(
  < c_L : GT.unit ->
          (GT.unit, path, GT.string, <  >) GT.a ->
          (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    c_N : GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    c_R : GT.unit ->
          (GT.unit, path, GT.string, <  >) GT.a ->
          (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
    t_path : GT.unit -> path -> GT.string; .. > ->
  GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  (< c_L : GT.unit ->
           (GT.unit, path, GT.string, <  >) GT.a ->
           (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
     c_N : GT.unit -> (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
     c_R : GT.unit ->
           (GT.unit, path, GT.string, <  >) GT.a ->
           (GT.unit, path, GT.string, <  >) GT.a -> GT.string;
     t_path : GT.unit -> path -> GT.string; .. >
   as 'x1) ->
  GT.unit ->
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'x1 ->
  GT.unit ->
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.unit ->
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a ->
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a -> GT.string
)
type(
  GT.string
)
type(
  string
)
type(
  string
)
type(
  GT.string
)
type(
  GT.unit
)
type(
  GT.unit -> GT.string
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  int_ref p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  string
)
type(
  string -> GT.string -> string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  string -> string -> GT.string
)
ident(
  ext_ref Pervasives.( ^ )
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  def p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  (GT.unit, path, GT.string, <  >) GT.a
)
ident(
  def subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  GT.unit
)
ident(
  def inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'x1
)
type(
  'y1
)
type(
  < c_L : 'inh3 ->
          ('inh3, path, 'syn3, <  >) GT.a ->
          ('inh3, path, 'syn3, <  >) GT.a -> 'syn3;
    c_N : 'inh3 -> ('inh3, path, 'syn3, <  >) GT.a -> 'syn3;
    c_R : 'inh3 ->
          ('inh3, path, 'syn3, <  >) GT.a ->
          ('inh3, path, 'syn3, <  >) GT.a -> 'syn3;
    t_path : 'inh3 -> path -> 'syn3; .. > ->
  'inh3 -> path -> 'syn3
)
type(
  'inh3 -> path -> 'syn3
)
type(
  'inh3 -> path -> 'syn3
)
type(
  < c_L : 'inh3 ->
          ('inh3, path, 'syn3, <  >) GT.a ->
          ('inh3, path, 'syn3, <  >) GT.a -> 'syn3;
    c_N : 'inh3 -> ('inh3, path, 'syn3, <  >) GT.a -> 'syn3;
    c_R : 'inh3 ->
          ('inh3, path, 'syn3, <  >) GT.a ->
          ('inh3, path, 'syn3, <  >) GT.a -> 'syn3;
    t_path : 'inh3 -> path -> 'syn3; .. >
  as 'z1
)
ident(
  int_ref this "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('z1 -> 'inh3 -> path -> 'syn3, GT.unit) GT.t
)
ident(
  int_ref path "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('z1 -> 'inh3 -> path -> 'syn3, GT.unit) GT.t ->
  'z1 -> 'inh3 -> path -> 'syn3
)
ident(
  ext_ref GT.transform
)
type(
  'z1
)
type(
  (('inh4, 'syn4) #path_tt -> 'inh4 -> path -> 'syn4, GT.unit) GT.t
)
type(
  ((('inh4, 'syn4) #path_tt as 'a2) -> 'inh4 -> path -> 'syn4, GT.unit) GT.t
)
type(
  GT.unit
)
type(
  'a2 -> 'inh4 -> path -> 'syn4
)
ident(
  int_ref path_gcata "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  < c_L : 'b2 ->
          ('b2, path, 'c2, <  >) GT.a -> ('b2, path, 'c2, <  >) GT.a -> 'c2;
    c_N : 'b2 -> ('b2, path, 'c2, <  >) GT.a -> 'c2;
    c_R : 'b2 ->
          ('b2, path, 'c2, <  >) GT.a -> ('b2, path, 'c2, <  >) GT.a -> 'c2;
    .. > ->
  'b2 -> path -> 'c2
)
type(
  'b2 -> path -> 'c2
)
type(
  path -> 'c2
)
type(
  'c2
)
type(
  'c2
)
type(
  'c2
)
type(
  ('b2, path, 'c2, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
ident(
  int_ref p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> path -> 'c2
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('b2 -> path -> 'c2) -> path -> <  > -> ('b2, path, 'c2, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('b2, path, 'c2, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
ident(
  int_ref subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> path -> 'c2
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('b2 -> path -> 'c2) -> path -> <  > -> ('b2, path, 'c2, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'b2
)
ident(
  int_ref inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> ('b2, path, 'c2, <  >) GT.a -> ('b2, path, 'c2, <  >) GT.a -> 'c2
)
type(
  < c_L : 'b2 ->
          ('b2, path, 'c2, <  >) GT.a -> ('b2, path, 'c2, <  >) GT.a -> 'c2;
    c_N : 'b2 -> ('b2, path, 'c2, <  >) GT.a -> 'c2;
    c_R : 'b2 ->
          ('b2, path, 'c2, <  >) GT.a -> ('b2, path, 'c2, <  >) GT.a -> 'c2;
    .. >
  as 'd2
)
ident(
  int_ref trans "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'c2
)
type(
  ('b2, path, 'c2, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
ident(
  int_ref p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> path -> 'c2
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('b2 -> path -> 'c2) -> path -> <  > -> ('b2, path, 'c2, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  ('b2, path, 'c2, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
ident(
  int_ref subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> path -> 'c2
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('b2 -> path -> 'c2) -> path -> <  > -> ('b2, path, 'c2, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'b2
)
ident(
  int_ref inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> ('b2, path, 'c2, <  >) GT.a -> ('b2, path, 'c2, <  >) GT.a -> 'c2
)
type(
  'd2
)
ident(
  int_ref trans "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'c2
)
type(
  ('b2, path, 'c2, <  >) GT.a
)
type(
  <  >
)
ident(
  int_ref tpo "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
ident(
  int_ref subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> path -> 'c2
)
ident(
  int_ref self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('b2 -> path -> 'c2) -> path -> <  > -> ('b2, path, 'c2, <  >) GT.a
)
ident(
  ext_ref GT.make
)
type(
  'b2
)
ident(
  int_ref inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> ('b2, path, 'c2, <  >) GT.a -> 'c2
)
type(
  'd2
)
ident(
  int_ref trans "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
type(
  path
)
ident(
  def p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
type(
  path
)
ident(
  def p0 "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
type(
  path
)
ident(
  int_ref subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  <  >
)
type(
  <  >
)
type(
  'b2 -> path -> 'c2
)
type(
  'd2
)
ident(
  int_ref trans "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'd2 -> 'b2 -> path -> 'c2
)
ident(
  int_ref path_gcata "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  <  >
)
ident(
  def tpo "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2 -> path -> 'c2
)
ident(
  def self "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  path
)
ident(
  def subj "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'b2
)
ident(
  def inh "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'd2
)
ident(
  def trans "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  'd2 -> 'b2 -> path -> 'c2
)
ident(
  def path_gcata "AST.ml" 185 4887 4895 "AST.ml" 185 4887 4943
)
type(
  ('a2 -> 'inh4 -> path -> 'syn4, GT.unit) GT.t
)
ident(
  def path "AST.ml" 185 4887 4895 "AST.ml" 206 5293 5302
)
"AST.ml" 187 4945 4961 "AST.ml" 187 4945 4968
type(
  e -> path
)
ident(
  def getPath "AST.ml" 187 4945 4953 "AST.ml" 206 5293 5302
)
"AST.ml" 188 4980 4983 "AST.ml" 188 4980 4987
type(
  e
)
"AST.ml" 188 4980 4991 "AST.ml" 188 4980 4992
type(
  path
)
"AST.ml" 190 4995 5007 "AST.ml" 190 4995 5008
type(
  GT.string
)
"AST.ml" 190 4995 5010 "AST.ml" 190 4995 5011
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 190 4995 5013 "AST.ml" 190 4995 5014
type(
  t
)
"AST.ml" 190 4995 4998 "AST.ml" 190 4995 5015
type(
  e
)
"AST.ml" 191 5016 5028 "AST.ml" 191 5016 5029
type(
  GT.string
)
"AST.ml" 191 5016 5031 "AST.ml" 191 5016 5032
type(
  t
)
"AST.ml" 191 5016 5034 "AST.ml" 191 5016 5035
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 191 5016 5019 "AST.ml" 191 5016 5036
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 191 5016 5036
type(
  e
)
"AST.ml" 192 5037 5049 "AST.ml" 192 5037 5050
type(
  GT.string
)
"AST.ml" 192 5037 5052 "AST.ml" 192 5037 5053
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 192 5037 5040 "AST.ml" 192 5037 5054
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 192 5037 5054
type(
  e
)
"AST.ml" 193 5055 5067 "AST.ml" 193 5055 5068
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 193 5055 5070 "AST.ml" 193 5055 5071
type(
  t
)
"AST.ml" 193 5055 5073 "AST.ml" 193 5055 5074
type(
  t
)
"AST.ml" 193 5055 5058 "AST.ml" 193 5055 5075
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 193 5055 5075
type(
  e
)
"AST.ml" 194 5076 5088 "AST.ml" 194 5076 5089
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 194 5076 5091 "AST.ml" 194 5076 5092
type(
  t
)
"AST.ml" 194 5076 5079 "AST.ml" 194 5076 5093
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 194 5076 5093
type(
  e
)
"AST.ml" 195 5094 5106 "AST.ml" 195 5094 5107
type(
  GT.string
)
"AST.ml" 195 5094 5109 "AST.ml" 195 5094 5110
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 195 5094 5097 "AST.ml" 195 5094 5111
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 195 5094 5111
type(
  e
)
"AST.ml" 196 5112 5124 "AST.ml" 196 5112 5125
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 196 5112 5115 "AST.ml" 196 5112 5125
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 196 5112 5125
type(
  e
)
"AST.ml" 197 5126 5138 "AST.ml" 197 5126 5139
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 197 5126 5129 "AST.ml" 197 5126 5139
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 197 5126 5139
type(
  e
)
"AST.ml" 198 5140 5152 "AST.ml" 198 5140 5153
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 198 5140 5143 "AST.ml" 198 5140 5153
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 198 5140 5153
type(
  e
)
"AST.ml" 199 5154 5166 "AST.ml" 199 5154 5167
type(
  GT.string
)
"AST.ml" 199 5154 5169 "AST.ml" 199 5154 5170
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 199 5154 5157 "AST.ml" 199 5154 5171
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 199 5154 5171
type(
  e
)
"AST.ml" 200 5172 5184 "AST.ml" 200 5172 5185
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 200 5172 5187 "AST.ml" 200 5172 5188
type(
  t
)
"AST.ml" 200 5172 5175 "AST.ml" 200 5172 5189
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 200 5172 5189
type(
  e
)
"AST.ml" 201 5190 5202 "AST.ml" 201 5190 5203
type(
  GT.string
)
"AST.ml" 201 5190 5205 "AST.ml" 201 5190 5206
type(
  e
)
ident(
  def e "AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
)
"AST.ml" 201 5190 5193 "AST.ml" 201 5190 5207
type(
  e
)
"AST.ml" 190 4995 4998 "AST.ml" 201 5190 5207
type(
  e
)
"AST.ml" 201 5190 5211 "AST.ml" 201 5190 5218
type(
  e -> path
)
ident(
  int_ref getPath "AST.ml" 187 4945 4961 "AST.ml" 187 4945 4968
)
"AST.ml" 201 5190 5219 "AST.ml" 201 5190 5220
type(
  e
)
ident(
  int_ref e "AST.ml" 190 4995 5010 "AST.ml" 190 4995 5011
)
"AST.ml" 201 5190 5211 "AST.ml" 201 5190 5220
call(
  tail
)
type(
  path
)
"AST.ml" 203 5222 5234 "AST.ml" 203 5222 5235
type(
  e
)
ident(
  def e "AST.ml" 203 5222 5243 "AST.ml" 203 5222 5256
)
"AST.ml" 203 5222 5237 "AST.ml" 203 5222 5238
type(
  t
)
"AST.ml" 203 5222 5225 "AST.ml" 203 5222 5239
type(
  e
)
"AST.ml" 203 5222 5246 "AST.ml" 203 5222 5253
type(
  e -> path
)
ident(
  int_ref getPath "AST.ml" 187 4945 4961 "AST.ml" 187 4945 4968
)
"AST.ml" 203 5222 5254 "AST.ml" 203 5222 5255
type(
  e
)
ident(
  int_ref e "AST.ml" 203 5222 5234 "AST.ml" 203 5222 5235
)
"AST.ml" 203 5222 5245 "AST.ml" 203 5222 5256
call(
  stack
)
type(
  path
)
"AST.ml" 203 5222 5243 "AST.ml" 203 5222 5256
type(
  path
)
"AST.ml" 204 5257 5269 "AST.ml" 204 5257 5270
type(
  t
)
"AST.ml" 204 5257 5272 "AST.ml" 204 5257 5273
type(
  e
)
ident(
  def e "AST.ml" 204 5257 5278 "AST.ml" 204 5257 5291
)
"AST.ml" 204 5257 5260 "AST.ml" 204 5257 5274
type(
  e
)
"AST.ml" 204 5257 5281 "AST.ml" 204 5257 5288
type(
  e -> path
)
ident(
  int_ref getPath "AST.ml" 187 4945 4961 "AST.ml" 187 4945 4968
)
"AST.ml" 204 5257 5289 "AST.ml" 204 5257 5290
type(
  e
)
ident(
  int_ref e "AST.ml" 204 5257 5272 "AST.ml" 204 5257 5273
)
"AST.ml" 204 5257 5280 "AST.ml" 204 5257 5291
call(
  stack
)
type(
  path
)
"AST.ml" 204 5257 5278 "AST.ml" 204 5257 5291
type(
  path
)
"AST.ml" 187 4945 4971 "AST.ml" 204 5257 5291
type(
  e -> path
)
"AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
type(
  t -> (Context.e * t) list
)
ident(
  def getContexts "AST.ml" 208 5304 5308 "AST.ml" 263 7835 7840
)
"AST.ml" 209 5339 5356 "AST.ml" 209 5339 5357
type(
  t
)
ident(
  def x "AST.ml" 209 5339 5368 "AST.ml" 209 5339 5430
)
"AST.ml" 209 5339 5359 "AST.ml" 209 5339 5360
type(
  t
)
ident(
  def y "AST.ml" 209 5339 5368 "AST.ml" 209 5339 5430
)
"AST.ml" 209 5339 5347 "AST.ml" 209 5339 5361
type(
  t
)
"AST.ml" 209 5339 5368 "AST.ml" 209 5339 5376
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 209 5339 5383 "AST.ml" 209 5339 5384
type(
  Context.e
)
ident(
  def c "AST.ml" 209 5339 5392 "AST.ml" 209 5339 5413
)
"AST.ml" 209 5339 5386 "AST.ml" 209 5339 5387
type(
  t
)
ident(
  def t "AST.ml" 209 5339 5392 "AST.ml" 209 5339 5413
)
"AST.ml" 209 5339 5383 "AST.ml" 209 5339 5387
type(
  Context.e * t
)
"AST.ml" 209 5339 5405 "AST.ml" 209 5339 5406
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 209 5339 5383 "AST.ml" 209 5339 5384
)
"AST.ml" 209 5339 5408 "AST.ml" 209 5339 5409
type(
  t
)
ident(
  int_ref y "AST.ml" 209 5339 5359 "AST.ml" 209 5339 5360
)
"AST.ml" 209 5339 5392 "AST.ml" 209 5339 5410
type(
  Context.e
)
"AST.ml" 209 5339 5412 "AST.ml" 209 5339 5413
type(
  t
)
ident(
  int_ref t "AST.ml" 209 5339 5386 "AST.ml" 209 5339 5387
)
"AST.ml" 209 5339 5392 "AST.ml" 209 5339 5413
type(
  Context.e * t
)
"AST.ml" 209 5339 5377 "AST.ml" 209 5339 5414
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 209 5339 5416 "AST.ml" 209 5339 5427
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 209 5339 5428 "AST.ml" 209 5339 5429
type(
  t
)
ident(
  int_ref x "AST.ml" 209 5339 5356 "AST.ml" 209 5339 5357
)
"AST.ml" 209 5339 5415 "AST.ml" 209 5339 5430
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 209 5339 5368 "AST.ml" 209 5339 5430
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 210 5431 5448 "AST.ml" 210 5431 5449
type(
  GT.string
)
ident(
  def s "AST.ml" 211 5461 5464 "AST.ml" 212 5535 5613
)
"AST.ml" 210 5431 5451 "AST.ml" 210 5431 5452
type(
  t
)
ident(
  def x "AST.ml" 211 5461 5464 "AST.ml" 212 5535 5613
)
"AST.ml" 210 5431 5454 "AST.ml" 210 5431 5455
type(
  t
)
ident(
  def y "AST.ml" 211 5461 5464 "AST.ml" 212 5535 5613
)
"AST.ml" 210 5431 5439 "AST.ml" 210 5431 5456
type(
  t
)
"AST.ml" 211 5461 5464 "AST.ml" 211 5461 5472
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 211 5461 5479 "AST.ml" 211 5461 5480
type(
  Context.e
)
ident(
  def c "AST.ml" 211 5461 5488 "AST.ml" 211 5461 5515
)
"AST.ml" 211 5461 5482 "AST.ml" 211 5461 5483
type(
  t
)
ident(
  def t "AST.ml" 211 5461 5488 "AST.ml" 211 5461 5515
)
"AST.ml" 211 5461 5479 "AST.ml" 211 5461 5483
type(
  Context.e * t
)
"AST.ml" 211 5461 5504 "AST.ml" 211 5461 5505
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 210 5431 5448 "AST.ml" 210 5431 5449
)
"AST.ml" 211 5461 5507 "AST.ml" 211 5461 5508
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 211 5461 5479 "AST.ml" 211 5461 5480
)
"AST.ml" 211 5461 5510 "AST.ml" 211 5461 5511
type(
  t
)
ident(
  int_ref y "AST.ml" 210 5431 5454 "AST.ml" 210 5431 5455
)
"AST.ml" 211 5461 5488 "AST.ml" 211 5461 5512
type(
  Context.e
)
"AST.ml" 211 5461 5514 "AST.ml" 211 5461 5515
type(
  t
)
ident(
  int_ref t "AST.ml" 211 5461 5482 "AST.ml" 211 5461 5483
)
"AST.ml" 211 5461 5488 "AST.ml" 211 5461 5515
type(
  Context.e * t
)
"AST.ml" 211 5461 5473 "AST.ml" 211 5461 5516
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 211 5461 5518 "AST.ml" 211 5461 5529
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 211 5461 5530 "AST.ml" 211 5461 5531
type(
  t
)
ident(
  int_ref x "AST.ml" 210 5431 5451 "AST.ml" 210 5431 5452
)
"AST.ml" 211 5461 5517 "AST.ml" 211 5461 5532
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 211 5461 5464 "AST.ml" 211 5461 5532
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 212 5535 5545 "AST.ml" 212 5535 5553
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 212 5535 5560 "AST.ml" 212 5535 5561
type(
  Context.e
)
ident(
  def c "AST.ml" 212 5535 5569 "AST.ml" 212 5535 5596
)
"AST.ml" 212 5535 5563 "AST.ml" 212 5535 5564
type(
  t
)
ident(
  def t "AST.ml" 212 5535 5569 "AST.ml" 212 5535 5596
)
"AST.ml" 212 5535 5560 "AST.ml" 212 5535 5564
type(
  Context.e * t
)
"AST.ml" 212 5535 5585 "AST.ml" 212 5535 5586
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 210 5431 5448 "AST.ml" 210 5431 5449
)
"AST.ml" 212 5535 5588 "AST.ml" 212 5535 5589
type(
  t
)
ident(
  int_ref x "AST.ml" 210 5431 5451 "AST.ml" 210 5431 5452
)
"AST.ml" 212 5535 5591 "AST.ml" 212 5535 5592
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 212 5535 5560 "AST.ml" 212 5535 5561
)
"AST.ml" 212 5535 5569 "AST.ml" 212 5535 5593
type(
  Context.e
)
"AST.ml" 212 5535 5595 "AST.ml" 212 5535 5596
type(
  t
)
ident(
  int_ref t "AST.ml" 212 5535 5563 "AST.ml" 212 5535 5564
)
"AST.ml" 212 5535 5569 "AST.ml" 212 5535 5596
type(
  Context.e * t
)
"AST.ml" 212 5535 5554 "AST.ml" 212 5535 5597
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 212 5535 5599 "AST.ml" 212 5535 5610
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 212 5535 5611 "AST.ml" 212 5535 5612
type(
  t
)
ident(
  int_ref y "AST.ml" 210 5431 5454 "AST.ml" 210 5431 5455
)
"AST.ml" 212 5535 5598 "AST.ml" 212 5535 5613
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 212 5535 5545 "AST.ml" 212 5535 5613
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 211 5461 5464 "AST.ml" 212 5535 5613
call(
  tail
)
type(
  (Context.e * t) list
)
type(
  (Context.e * t) list -> (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref Pervasives.( @ )
)
"AST.ml" 214 5644 5661 "AST.ml" 214 5644 5662
type(
  GT.string
)
ident(
  def s "AST.ml" 214 5644 5673 "AST.ml" 214 5644 5739
)
"AST.ml" 214 5644 5664 "AST.ml" 214 5644 5665
type(
  t
)
ident(
  def x "AST.ml" 214 5644 5673 "AST.ml" 214 5644 5739
)
"AST.ml" 214 5644 5652 "AST.ml" 214 5644 5666
type(
  t
)
"AST.ml" 214 5644 5673 "AST.ml" 214 5644 5681
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 214 5644 5688 "AST.ml" 214 5644 5689
type(
  Context.e
)
ident(
  def c "AST.ml" 214 5644 5697 "AST.ml" 214 5644 5719
)
"AST.ml" 214 5644 5691 "AST.ml" 214 5644 5692
type(
  t
)
ident(
  def t "AST.ml" 214 5644 5697 "AST.ml" 214 5644 5719
)
"AST.ml" 214 5644 5688 "AST.ml" 214 5644 5692
type(
  Context.e * t
)
"AST.ml" 214 5644 5711 "AST.ml" 214 5644 5712
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 214 5644 5661 "AST.ml" 214 5644 5662
)
"AST.ml" 214 5644 5714 "AST.ml" 214 5644 5715
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 214 5644 5688 "AST.ml" 214 5644 5689
)
"AST.ml" 214 5644 5697 "AST.ml" 214 5644 5716
type(
  Context.e
)
"AST.ml" 214 5644 5718 "AST.ml" 214 5644 5719
type(
  t
)
ident(
  int_ref t "AST.ml" 214 5644 5691 "AST.ml" 214 5644 5692
)
"AST.ml" 214 5644 5697 "AST.ml" 214 5644 5719
type(
  Context.e * t
)
"AST.ml" 214 5644 5682 "AST.ml" 214 5644 5720
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 214 5644 5725 "AST.ml" 214 5644 5736
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 214 5644 5737 "AST.ml" 214 5644 5738
type(
  t
)
ident(
  int_ref x "AST.ml" 214 5644 5664 "AST.ml" 214 5644 5665
)
"AST.ml" 214 5644 5724 "AST.ml" 214 5644 5739
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 214 5644 5673 "AST.ml" 214 5644 5739
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 215 5740 5757 "AST.ml" 215 5740 5758
type(
  t
)
ident(
  def x "AST.ml" 215 5740 5769 "AST.ml" 215 5740 5835
)
"AST.ml" 215 5740 5760 "AST.ml" 215 5740 5761
type(
  t
)
ident(
  def y "AST.ml" 215 5740 5769 "AST.ml" 215 5740 5835
)
"AST.ml" 215 5740 5763 "AST.ml" 215 5740 5764
type(
  t
)
ident(
  def z "AST.ml" 215 5740 5769 "AST.ml" 215 5740 5835
)
"AST.ml" 215 5740 5748 "AST.ml" 215 5740 5765
type(
  t
)
"AST.ml" 215 5740 5769 "AST.ml" 215 5740 5777
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 215 5740 5784 "AST.ml" 215 5740 5785
type(
  Context.e
)
ident(
  def c "AST.ml" 215 5740 5793 "AST.ml" 215 5740 5818
)
"AST.ml" 215 5740 5787 "AST.ml" 215 5740 5788
type(
  t
)
ident(
  def t "AST.ml" 215 5740 5793 "AST.ml" 215 5740 5818
)
"AST.ml" 215 5740 5784 "AST.ml" 215 5740 5788
type(
  Context.e * t
)
"AST.ml" 215 5740 5807 "AST.ml" 215 5740 5808
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 215 5740 5784 "AST.ml" 215 5740 5785
)
"AST.ml" 215 5740 5810 "AST.ml" 215 5740 5811
type(
  t
)
ident(
  int_ref y "AST.ml" 215 5740 5760 "AST.ml" 215 5740 5761
)
"AST.ml" 215 5740 5813 "AST.ml" 215 5740 5814
type(
  t
)
ident(
  int_ref z "AST.ml" 215 5740 5763 "AST.ml" 215 5740 5764
)
"AST.ml" 215 5740 5793 "AST.ml" 215 5740 5815
type(
  Context.e
)
"AST.ml" 215 5740 5817 "AST.ml" 215 5740 5818
type(
  t
)
ident(
  int_ref t "AST.ml" 215 5740 5787 "AST.ml" 215 5740 5788
)
"AST.ml" 215 5740 5793 "AST.ml" 215 5740 5818
type(
  Context.e * t
)
"AST.ml" 215 5740 5778 "AST.ml" 215 5740 5819
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 215 5740 5821 "AST.ml" 215 5740 5832
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 215 5740 5833 "AST.ml" 215 5740 5834
type(
  t
)
ident(
  int_ref x "AST.ml" 215 5740 5757 "AST.ml" 215 5740 5758
)
"AST.ml" 215 5740 5820 "AST.ml" 215 5740 5835
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 215 5740 5769 "AST.ml" 215 5740 5835
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 216 5836 5853 "AST.ml" 216 5836 5854
type(
  t
)
ident(
  def x "AST.ml" 216 5836 5865 "AST.ml" 216 5836 5931
)
"AST.ml" 216 5836 5856 "AST.ml" 216 5836 5857
type(
  t
)
ident(
  def y "AST.ml" 216 5836 5865 "AST.ml" 216 5836 5931
)
"AST.ml" 216 5836 5844 "AST.ml" 216 5836 5858
type(
  t
)
"AST.ml" 216 5836 5865 "AST.ml" 216 5836 5873
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 216 5836 5880 "AST.ml" 216 5836 5881
type(
  Context.e
)
ident(
  def c "AST.ml" 216 5836 5889 "AST.ml" 216 5836 5911
)
"AST.ml" 216 5836 5883 "AST.ml" 216 5836 5884
type(
  t
)
ident(
  def t "AST.ml" 216 5836 5889 "AST.ml" 216 5836 5911
)
"AST.ml" 216 5836 5880 "AST.ml" 216 5836 5884
type(
  Context.e * t
)
"AST.ml" 216 5836 5903 "AST.ml" 216 5836 5904
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 216 5836 5880 "AST.ml" 216 5836 5881
)
"AST.ml" 216 5836 5906 "AST.ml" 216 5836 5907
type(
  t
)
ident(
  int_ref y "AST.ml" 216 5836 5856 "AST.ml" 216 5836 5857
)
"AST.ml" 216 5836 5889 "AST.ml" 216 5836 5908
type(
  Context.e
)
"AST.ml" 216 5836 5910 "AST.ml" 216 5836 5911
type(
  t
)
ident(
  int_ref t "AST.ml" 216 5836 5883 "AST.ml" 216 5836 5884
)
"AST.ml" 216 5836 5889 "AST.ml" 216 5836 5911
type(
  Context.e * t
)
"AST.ml" 216 5836 5874 "AST.ml" 216 5836 5912
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 216 5836 5917 "AST.ml" 216 5836 5928
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 216 5836 5929 "AST.ml" 216 5836 5930
type(
  t
)
ident(
  int_ref x "AST.ml" 216 5836 5853 "AST.ml" 216 5836 5854
)
"AST.ml" 216 5836 5916 "AST.ml" 216 5836 5931
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 216 5836 5865 "AST.ml" 216 5836 5931
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 217 5932 5949 "AST.ml" 217 5932 5950
type(
  GT.string
)
ident(
  def x "AST.ml" 217 5932 5961 "AST.ml" 217 5932 6027
)
"AST.ml" 217 5932 5952 "AST.ml" 217 5932 5953
type(
  t
)
ident(
  def y "AST.ml" 217 5932 5961 "AST.ml" 217 5932 6027
)
"AST.ml" 217 5932 5940 "AST.ml" 217 5932 5954
type(
  t
)
"AST.ml" 217 5932 5961 "AST.ml" 217 5932 5969
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 217 5932 5976 "AST.ml" 217 5932 5977
type(
  Context.e
)
ident(
  def c "AST.ml" 217 5932 5985 "AST.ml" 217 5932 6007
)
"AST.ml" 217 5932 5979 "AST.ml" 217 5932 5980
type(
  t
)
ident(
  def t "AST.ml" 217 5932 5985 "AST.ml" 217 5932 6007
)
"AST.ml" 217 5932 5976 "AST.ml" 217 5932 5980
type(
  Context.e * t
)
"AST.ml" 217 5932 5999 "AST.ml" 217 5932 6000
type(
  GT.string
)
ident(
  int_ref x "AST.ml" 217 5932 5949 "AST.ml" 217 5932 5950
)
"AST.ml" 217 5932 6002 "AST.ml" 217 5932 6003
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 217 5932 5976 "AST.ml" 217 5932 5977
)
"AST.ml" 217 5932 5985 "AST.ml" 217 5932 6004
type(
  Context.e
)
"AST.ml" 217 5932 6006 "AST.ml" 217 5932 6007
type(
  t
)
ident(
  int_ref t "AST.ml" 217 5932 5979 "AST.ml" 217 5932 5980
)
"AST.ml" 217 5932 5985 "AST.ml" 217 5932 6007
type(
  Context.e * t
)
"AST.ml" 217 5932 5970 "AST.ml" 217 5932 6008
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 217 5932 6013 "AST.ml" 217 5932 6024
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 217 5932 6025 "AST.ml" 217 5932 6026
type(
  t
)
ident(
  int_ref y "AST.ml" 217 5932 5952 "AST.ml" 217 5932 5953
)
"AST.ml" 217 5932 6012 "AST.ml" 217 5932 6027
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 217 5932 5961 "AST.ml" 217 5932 6027
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 218 6028 6045 "AST.ml" 218 6028 6046
type(
  t
)
ident(
  def x "AST.ml" 218 6028 6057 "AST.ml" 218 6028 6123
)
"AST.ml" 218 6028 6036 "AST.ml" 218 6028 6046
type(
  t
)
"AST.ml" 218 6028 6057 "AST.ml" 218 6028 6065
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 218 6028 6072 "AST.ml" 218 6028 6073
type(
  Context.e
)
ident(
  def c "AST.ml" 218 6028 6081 "AST.ml" 218 6028 6099
)
"AST.ml" 218 6028 6075 "AST.ml" 218 6028 6076
type(
  t
)
ident(
  def t "AST.ml" 218 6028 6081 "AST.ml" 218 6028 6099
)
"AST.ml" 218 6028 6072 "AST.ml" 218 6028 6076
type(
  Context.e * t
)
"AST.ml" 218 6028 6095 "AST.ml" 218 6028 6096
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 218 6028 6072 "AST.ml" 218 6028 6073
)
"AST.ml" 218 6028 6081 "AST.ml" 218 6028 6096
type(
  Context.e
)
"AST.ml" 218 6028 6098 "AST.ml" 218 6028 6099
type(
  t
)
ident(
  int_ref t "AST.ml" 218 6028 6075 "AST.ml" 218 6028 6076
)
"AST.ml" 218 6028 6081 "AST.ml" 218 6028 6099
type(
  Context.e * t
)
"AST.ml" 218 6028 6066 "AST.ml" 218 6028 6100
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 218 6028 6109 "AST.ml" 218 6028 6120
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 218 6028 6121 "AST.ml" 218 6028 6122
type(
  t
)
ident(
  int_ref x "AST.ml" 218 6028 6045 "AST.ml" 218 6028 6046
)
"AST.ml" 218 6028 6108 "AST.ml" 218 6028 6123
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 218 6028 6057 "AST.ml" 218 6028 6123
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 219 6124 6141 "AST.ml" 219 6124 6142
type(
  t
)
ident(
  def x "AST.ml" 220 6153 6156 "AST.ml" 221 6222 6295
)
"AST.ml" 219 6124 6144 "AST.ml" 219 6124 6145
type(
  t
)
ident(
  def y "AST.ml" 220 6153 6156 "AST.ml" 221 6222 6295
)
"AST.ml" 219 6124 6132 "AST.ml" 219 6124 6146
type(
  t
)
"AST.ml" 220 6153 6156 "AST.ml" 220 6153 6164
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 220 6153 6171 "AST.ml" 220 6153 6172
type(
  Context.e
)
ident(
  def c "AST.ml" 220 6153 6180 "AST.ml" 220 6153 6202
)
"AST.ml" 220 6153 6174 "AST.ml" 220 6153 6175
type(
  t
)
ident(
  def t "AST.ml" 220 6153 6180 "AST.ml" 220 6153 6202
)
"AST.ml" 220 6153 6171 "AST.ml" 220 6153 6175
type(
  Context.e * t
)
"AST.ml" 220 6153 6194 "AST.ml" 220 6153 6195
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 220 6153 6171 "AST.ml" 220 6153 6172
)
"AST.ml" 220 6153 6197 "AST.ml" 220 6153 6198
type(
  t
)
ident(
  int_ref y "AST.ml" 219 6124 6144 "AST.ml" 219 6124 6145
)
"AST.ml" 220 6153 6180 "AST.ml" 220 6153 6199
type(
  Context.e
)
"AST.ml" 220 6153 6201 "AST.ml" 220 6153 6202
type(
  t
)
ident(
  int_ref t "AST.ml" 220 6153 6174 "AST.ml" 220 6153 6175
)
"AST.ml" 220 6153 6180 "AST.ml" 220 6153 6202
type(
  Context.e * t
)
"AST.ml" 220 6153 6165 "AST.ml" 220 6153 6203
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 220 6153 6205 "AST.ml" 220 6153 6216
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 220 6153 6217 "AST.ml" 220 6153 6218
type(
  t
)
ident(
  int_ref x "AST.ml" 219 6124 6141 "AST.ml" 219 6124 6142
)
"AST.ml" 220 6153 6204 "AST.ml" 220 6153 6219
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 220 6153 6156 "AST.ml" 220 6153 6219
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 221 6222 6232 "AST.ml" 221 6222 6240
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 221 6222 6247 "AST.ml" 221 6222 6248
type(
  Context.e
)
ident(
  def c "AST.ml" 221 6222 6256 "AST.ml" 221 6222 6278
)
"AST.ml" 221 6222 6250 "AST.ml" 221 6222 6251
type(
  t
)
ident(
  def t "AST.ml" 221 6222 6256 "AST.ml" 221 6222 6278
)
"AST.ml" 221 6222 6247 "AST.ml" 221 6222 6251
type(
  Context.e * t
)
"AST.ml" 221 6222 6270 "AST.ml" 221 6222 6271
type(
  t
)
ident(
  int_ref x "AST.ml" 219 6124 6141 "AST.ml" 219 6124 6142
)
"AST.ml" 221 6222 6273 "AST.ml" 221 6222 6274
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 221 6222 6247 "AST.ml" 221 6222 6248
)
"AST.ml" 221 6222 6256 "AST.ml" 221 6222 6275
type(
  Context.e
)
"AST.ml" 221 6222 6277 "AST.ml" 221 6222 6278
type(
  t
)
ident(
  int_ref t "AST.ml" 221 6222 6250 "AST.ml" 221 6222 6251
)
"AST.ml" 221 6222 6256 "AST.ml" 221 6222 6278
type(
  Context.e * t
)
"AST.ml" 221 6222 6241 "AST.ml" 221 6222 6279
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 221 6222 6281 "AST.ml" 221 6222 6292
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 221 6222 6293 "AST.ml" 221 6222 6294
type(
  t
)
ident(
  int_ref y "AST.ml" 219 6124 6144 "AST.ml" 219 6124 6145
)
"AST.ml" 221 6222 6280 "AST.ml" 221 6222 6295
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 221 6222 6232 "AST.ml" 221 6222 6295
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 220 6153 6156 "AST.ml" 221 6222 6295
call(
  tail
)
type(
  (Context.e * t) list
)
type(
  (Context.e * t) list -> (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref Pervasives.( @ )
)
"AST.ml" 223 6299 6316 "AST.ml" 223 6299 6317
type(
  t
)
ident(
  def x "AST.ml" 223 6299 6328 "AST.ml" 223 6299 6395
)
"AST.ml" 223 6299 6307 "AST.ml" 223 6299 6317
type(
  t
)
"AST.ml" 223 6299 6328 "AST.ml" 223 6299 6336
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 223 6299 6343 "AST.ml" 223 6299 6344
type(
  Context.e
)
ident(
  def c "AST.ml" 223 6299 6352 "AST.ml" 223 6299 6373
)
"AST.ml" 223 6299 6346 "AST.ml" 223 6299 6347
type(
  t
)
ident(
  def t "AST.ml" 223 6299 6352 "AST.ml" 223 6299 6373
)
"AST.ml" 223 6299 6343 "AST.ml" 223 6299 6347
type(
  Context.e * t
)
"AST.ml" 223 6299 6369 "AST.ml" 223 6299 6370
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 223 6299 6343 "AST.ml" 223 6299 6344
)
"AST.ml" 223 6299 6352 "AST.ml" 223 6299 6370
type(
  Context.e
)
"AST.ml" 223 6299 6372 "AST.ml" 223 6299 6373
type(
  t
)
ident(
  int_ref t "AST.ml" 223 6299 6346 "AST.ml" 223 6299 6347
)
"AST.ml" 223 6299 6352 "AST.ml" 223 6299 6373
type(
  Context.e * t
)
"AST.ml" 223 6299 6337 "AST.ml" 223 6299 6374
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 223 6299 6381 "AST.ml" 223 6299 6392
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 223 6299 6393 "AST.ml" 223 6299 6394
type(
  t
)
ident(
  int_ref x "AST.ml" 223 6299 6316 "AST.ml" 223 6299 6317
)
"AST.ml" 223 6299 6380 "AST.ml" 223 6299 6395
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 223 6299 6328 "AST.ml" 223 6299 6395
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 224 6396 6413 "AST.ml" 224 6396 6414
type(
  t
)
ident(
  def x "AST.ml" 224 6396 6425 "AST.ml" 224 6396 6492
)
"AST.ml" 224 6396 6404 "AST.ml" 224 6396 6414
type(
  t
)
"AST.ml" 224 6396 6425 "AST.ml" 224 6396 6433
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 224 6396 6440 "AST.ml" 224 6396 6441
type(
  Context.e
)
ident(
  def c "AST.ml" 224 6396 6449 "AST.ml" 224 6396 6470
)
"AST.ml" 224 6396 6443 "AST.ml" 224 6396 6444
type(
  t
)
ident(
  def t "AST.ml" 224 6396 6449 "AST.ml" 224 6396 6470
)
"AST.ml" 224 6396 6440 "AST.ml" 224 6396 6444
type(
  Context.e * t
)
"AST.ml" 224 6396 6466 "AST.ml" 224 6396 6467
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 224 6396 6440 "AST.ml" 224 6396 6441
)
"AST.ml" 224 6396 6449 "AST.ml" 224 6396 6467
type(
  Context.e
)
"AST.ml" 224 6396 6469 "AST.ml" 224 6396 6470
type(
  t
)
ident(
  int_ref t "AST.ml" 224 6396 6443 "AST.ml" 224 6396 6444
)
"AST.ml" 224 6396 6449 "AST.ml" 224 6396 6470
type(
  Context.e * t
)
"AST.ml" 224 6396 6434 "AST.ml" 224 6396 6471
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 224 6396 6478 "AST.ml" 224 6396 6489
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 224 6396 6490 "AST.ml" 224 6396 6491
type(
  t
)
ident(
  int_ref x "AST.ml" 224 6396 6413 "AST.ml" 224 6396 6414
)
"AST.ml" 224 6396 6477 "AST.ml" 224 6396 6492
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 224 6396 6425 "AST.ml" 224 6396 6492
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 225 6493 6510 "AST.ml" 225 6493 6511
type(
  GT.string
)
ident(
  def s "AST.ml" 225 6493 6522 "AST.ml" 225 6493 6589
)
"AST.ml" 225 6493 6513 "AST.ml" 225 6493 6514
type(
  t
)
ident(
  def x "AST.ml" 225 6493 6522 "AST.ml" 225 6493 6589
)
"AST.ml" 225 6493 6501 "AST.ml" 225 6493 6515
type(
  t
)
"AST.ml" 225 6493 6522 "AST.ml" 225 6493 6530
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 225 6493 6537 "AST.ml" 225 6493 6538
type(
  Context.e
)
ident(
  def c "AST.ml" 225 6493 6546 "AST.ml" 225 6493 6571
)
"AST.ml" 225 6493 6540 "AST.ml" 225 6493 6541
type(
  t
)
ident(
  def t "AST.ml" 225 6493 6546 "AST.ml" 225 6493 6571
)
"AST.ml" 225 6493 6537 "AST.ml" 225 6493 6541
type(
  Context.e * t
)
"AST.ml" 225 6493 6563 "AST.ml" 225 6493 6564
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 225 6493 6510 "AST.ml" 225 6493 6511
)
"AST.ml" 225 6493 6566 "AST.ml" 225 6493 6567
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 225 6493 6537 "AST.ml" 225 6493 6538
)
"AST.ml" 225 6493 6546 "AST.ml" 225 6493 6568
type(
  Context.e
)
"AST.ml" 225 6493 6570 "AST.ml" 225 6493 6571
type(
  t
)
ident(
  int_ref t "AST.ml" 225 6493 6540 "AST.ml" 225 6493 6541
)
"AST.ml" 225 6493 6546 "AST.ml" 225 6493 6571
type(
  Context.e * t
)
"AST.ml" 225 6493 6531 "AST.ml" 225 6493 6572
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 225 6493 6575 "AST.ml" 225 6493 6586
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 225 6493 6587 "AST.ml" 225 6493 6588
type(
  t
)
ident(
  int_ref x "AST.ml" 225 6493 6513 "AST.ml" 225 6493 6514
)
"AST.ml" 225 6493 6574 "AST.ml" 225 6493 6589
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 225 6493 6522 "AST.ml" 225 6493 6589
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 226 6590 6607 "AST.ml" 226 6590 6608
type(
  GT.string
)
ident(
  def s "AST.ml" 226 6590 6619 "AST.ml" 226 6590 6686
)
"AST.ml" 226 6590 6610 "AST.ml" 226 6590 6611
type(
  t
)
ident(
  def x "AST.ml" 226 6590 6619 "AST.ml" 226 6590 6686
)
"AST.ml" 226 6590 6598 "AST.ml" 226 6590 6612
type(
  t
)
"AST.ml" 226 6590 6619 "AST.ml" 226 6590 6627
type(
  (Context.e * t -> Context.e * t) ->
  (Context.e * t) list -> (Context.e * t) list
)
ident(
  ext_ref List.map
)
"AST.ml" 226 6590 6634 "AST.ml" 226 6590 6635
type(
  Context.e
)
ident(
  def c "AST.ml" 226 6590 6643 "AST.ml" 226 6590 6668
)
"AST.ml" 226 6590 6637 "AST.ml" 226 6590 6638
type(
  t
)
ident(
  def t "AST.ml" 226 6590 6643 "AST.ml" 226 6590 6668
)
"AST.ml" 226 6590 6634 "AST.ml" 226 6590 6638
type(
  Context.e * t
)
"AST.ml" 226 6590 6660 "AST.ml" 226 6590 6661
type(
  GT.string
)
ident(
  int_ref s "AST.ml" 226 6590 6607 "AST.ml" 226 6590 6608
)
"AST.ml" 226 6590 6663 "AST.ml" 226 6590 6664
type(
  Context.e
)
ident(
  int_ref c "AST.ml" 226 6590 6634 "AST.ml" 226 6590 6635
)
"AST.ml" 226 6590 6643 "AST.ml" 226 6590 6665
type(
  Context.e
)
"AST.ml" 226 6590 6667 "AST.ml" 226 6590 6668
type(
  t
)
ident(
  int_ref t "AST.ml" 226 6590 6637 "AST.ml" 226 6590 6638
)
"AST.ml" 226 6590 6643 "AST.ml" 226 6590 6668
type(
  Context.e * t
)
"AST.ml" 226 6590 6628 "AST.ml" 226 6590 6669
type(
  Context.e * t -> Context.e * t
)
"AST.ml" 226 6590 6672 "AST.ml" 226 6590 6683
type(
  t -> (Context.e * t) list
)
ident(
  int_ref getContexts "AST.ml" 208 5304 5316 "AST.ml" 208 5304 5327
)
"AST.ml" 226 6590 6684 "AST.ml" 226 6590 6685
type(
  t
)
ident(
  int_ref x "AST.ml" 226 6590 6610 "AST.ml" 226 6590 6611
)
"AST.ml" 226 6590 6671 "AST.ml" 226 6590 6686
call(
  stack
)
type(
  (Context.e * t) list
)
"AST.ml" 226 6590 6619 "AST.ml" 226 6590 6686
call(
  tail
)
type(
  (Context.e * t) list
)
"AST.ml" 227 6687 6695 "AST.ml" 227 6687 6696
type(
  t
)
ident(
  def t "AST.ml" 227 6687 6716 "AST.ml" 227 6687 6725
)
"AST.ml" 227 6687 6717 "AST.ml" 227 6687 6721
type(
  Context.e
)
"AST.ml" 227 6687 6723 "AST.ml" 227 6687 6724
type(
  t
)
ident(
  int_ref t "AST.ml" 227 6687 6695 "AST.ml" 227 6687 6696
)
"AST.ml" 227 6687 6717 "AST.ml" 227 6687 6724
type(
  Context.e * t
)
"AST.ml" 227 6687 6716 "AST.ml" 227 6687 6725
type(
  (Context.e * t) list
)
type(
  (Context.e * t) list
)
"AST.ml" 208 5304 5330 "AST.ml" 227 6687 6725
type(
  t -> (Context.e * t) list
)
"AST.ml" 229 6727 6735 "AST.ml" 229 6727 6745
type(
  string -> unit -> t
)
ident(
  def newCounter "AST.ml" 236 6876 6880 "AST.ml" 263 7835 7840
)
"AST.ml" 229 6727 6746 "AST.ml" 229 6727 6750
type(
  string
)
ident(
  def name "AST.ml" 230 6753 6759 "AST.ml" 234 6831 6874
)
"AST.ml" 230 6753 6763 "AST.ml" 230 6753 6764
type(
  int ref
)
ident(
  def i "AST.ml" 231 6776 6782 "AST.ml" 234 6831 6874
)
"AST.ml" 230 6753 6767 "AST.ml" 230 6753 6770
type(
  int -> int ref
)
ident(
  ext_ref Pervasives.ref
)
"AST.ml" 230 6753 6771 "AST.ml" 230 6753 6772
type(
  int
)
"AST.ml" 230 6753 6767 "AST.ml" 230 6753 6772
type(
  int ref
)
"AST.ml" 231 6776 6786 "AST.ml" 231 6776 6788
type(
  unit
)
"AST.ml" 232 6792 6804 "AST.ml" 232 6792 6806
type(
  int
)
ident(
  def i' "AST.ml" 233 6815 6823 "AST.ml" 234 6831 6874
)
"AST.ml" 232 6792 6810 "AST.ml" 232 6792 6811
type(
  int ref
)
ident(
  int_ref i "AST.ml" 230 6753 6763 "AST.ml" 230 6753 6764
)
"AST.ml" 232 6792 6809 "AST.ml" 232 6792 6811
type(
  int
)
type(
  int ref -> int
)
ident(
  ext_ref Pervasives.( ! )
)
"AST.ml" 233 6815 6823 "AST.ml" 233 6815 6827
type(
  int ref -> unit
)
ident(
  ext_ref Pervasives.incr
)
"AST.ml" 233 6815 6828 "AST.ml" 233 6815 6829
type(
  int ref
)
ident(
  int_ref i "AST.ml" 230 6753 6763 "AST.ml" 230 6753 6764
)
"AST.ml" 233 6815 6823 "AST.ml" 233 6815 6829
type(
  unit
)
"AST.ml" 234 6831 6844 "AST.ml" 234 6831 6858
type(
  (string -> int -> GT.string, unit, GT.string) format ->
  string -> int -> GT.string
)
ident(
  ext_ref Printf.sprintf
)
"AST.ml" 234 6831 6859 "AST.ml" 234 6831 6865
type(
  (string -> int -> GT.string, unit, GT.string) format
)
"AST.ml" 234 6831 6866 "AST.ml" 234 6831 6870
type(
  string
)
ident(
  int_ref name "AST.ml" 229 6727 6746 "AST.ml" 229 6727 6750
)
"AST.ml" 234 6831 6871 "AST.ml" 234 6831 6873
type(
  int
)
ident(
  int_ref i' "AST.ml" 232 6792 6804 "AST.ml" 232 6792 6806
)
"AST.ml" 234 6831 6843 "AST.ml" 234 6831 6874
call(
  stack
)
type(
  GT.string
)
"AST.ml" 234 6831 6839 "AST.ml" 234 6831 6874
type(
  t
)
"AST.ml" 233 6815 6823 "AST.ml" 234 6831 6874
type(
  t
)
"AST.ml" 232 6792 6800 "AST.ml" 234 6831 6874
type(
  t
)
"AST.ml" 231 6776 6782 "AST.ml" 234 6831 6874
type(
  unit -> t
)
"AST.ml" 230 6753 6759 "AST.ml" 234 6831 6874
type(
  unit -> t
)
"AST.ml" 229 6727 6746 "AST.ml" 234 6831 6874
type(
  string -> unit -> t
)
"AST.ml" 236 6876 6884 "AST.ml" 236 6876 6890
type(
  unit -> t
)
ident(
  def newLoc "AST.ml" 237 6911 6915 "AST.ml" 263 7835 7840
)
"AST.ml" 236 6876 6894 "AST.ml" 236 6876 6904
type(
  string -> unit -> t
)
ident(
  int_ref newCounter "AST.ml" 229 6727 6735 "AST.ml" 229 6727 6745
)
"AST.ml" 236 6876 6905 "AST.ml" 236 6876 6910
type(
  string
)
"AST.ml" 236 6876 6894 "AST.ml" 236 6876 6910
call(
  stack
)
type(
  unit -> t
)
"AST.ml" 237 6911 6919 "AST.ml" 237 6911 6926
type(
  unit -> t
)
ident(
  def newSema "AST.ml" 239 6950 6954 "AST.ml" 263 7835 7840
)
"AST.ml" 237 6911 6929 "AST.ml" 237 6911 6939
type(
  string -> unit -> t
)
ident(
  int_ref newCounter "AST.ml" 229 6727 6735 "AST.ml" 229 6727 6745
)
"AST.ml" 237 6911 6940 "AST.ml" 237 6911 6946
type(
  string
)
"AST.ml" 237 6911 6929 "AST.ml" 237 6911 6946
call(
  stack
)
type(
  unit -> t
)
"AST.ml" 239 6950 6958 "AST.ml" 239 6950 6969
type(
  'e2 * t -> 'f2 * 'g2 -> ('e2 * t) * ('f2 * 'g2)
)
ident(
  def contextStep "AST.ml" 261 7787 7833 "AST.ml" 263 7835 7840
)
"AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
type(
  'e2
)
ident(
  def c "AST.ml" 239 6950 6977 "AST.ml" 261 7787 7833
)
"AST.ml" 239 6950 6974 "AST.ml" 239 6950 6975
type(
  t
)
ident(
  def t "AST.ml" 239 6950 6977 "AST.ml" 261 7787 7833
)
"AST.ml" 239 6950 6971 "AST.ml" 239 6950 6975
type(
  'e2 * t
)
"AST.ml" 239 6950 6979 "AST.ml" 239 6950 6982
type(
  'f2
)
ident(
  def loc "AST.ml" 240 7002 7008 "AST.ml" 261 7787 7833
)
"AST.ml" 239 6950 6984 "AST.ml" 239 6950 6988
type(
  'g2
)
ident(
  def sema "AST.ml" 240 7002 7008 "AST.ml" 261 7787 7833
)
"AST.ml" 239 6950 6979 "AST.ml" 239 6950 6988
type(
  'f2 * 'g2
)
"AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
type(
  'f2 * 'g2
)
ident(
  def state "AST.ml" 240 7002 7008 "AST.ml" 261 7787 7833
)
"AST.ml" 240 7002 7014 "AST.ml" 240 7002 7015
type(
  t
)
ident(
  int_ref t "AST.ml" 239 6950 6974 "AST.ml" 239 6950 6975
)
"AST.ml" 246 7230 7247 "AST.ml" 246 7230 7251
type(
  t
)
"AST.ml" 246 7230 7253 "AST.ml" 246 7230 7254
type(
  t
)
ident(
  def x "AST.ml" 246 7230 7263 "AST.ml" 246 7230 7276
)
"AST.ml" 246 7230 7256 "AST.ml" 246 7230 7257
type(
  t
)
"AST.ml" 246 7230 7238 "AST.ml" 246 7230 7258
type(
  t
)
"AST.ml" 246 7230 7264 "AST.ml" 246 7230 7265
type(
  'e2
)
ident(
  int_ref c "AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
)
"AST.ml" 246 7230 7267 "AST.ml" 246 7230 7268
type(
  t
)
ident(
  int_ref x "AST.ml" 246 7230 7253 "AST.ml" 246 7230 7254
)
"AST.ml" 246 7230 7263 "AST.ml" 246 7230 7269
type(
  'e2 * t
)
"AST.ml" 246 7230 7271 "AST.ml" 246 7230 7276
type(
  'f2 * 'g2
)
ident(
  int_ref state "AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
)
"AST.ml" 246 7230 7263 "AST.ml" 246 7230 7276
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 247 7277 7294 "AST.ml" 247 7277 7299
type(
  t
)
"AST.ml" 247 7277 7301 "AST.ml" 247 7277 7302
type(
  t
)
"AST.ml" 247 7277 7304 "AST.ml" 247 7277 7305
type(
  t
)
ident(
  def y "AST.ml" 247 7277 7310 "AST.ml" 247 7277 7323
)
"AST.ml" 247 7277 7285 "AST.ml" 247 7277 7306
type(
  t
)
"AST.ml" 247 7277 7311 "AST.ml" 247 7277 7312
type(
  'e2
)
ident(
  int_ref c "AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
)
"AST.ml" 247 7277 7314 "AST.ml" 247 7277 7315
type(
  t
)
ident(
  int_ref y "AST.ml" 247 7277 7304 "AST.ml" 247 7277 7305
)
"AST.ml" 247 7277 7310 "AST.ml" 247 7277 7316
type(
  'e2 * t
)
"AST.ml" 247 7277 7318 "AST.ml" 247 7277 7323
type(
  'f2 * 'g2
)
ident(
  int_ref state "AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
)
"AST.ml" 247 7277 7310 "AST.ml" 247 7277 7323
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 248 7324 7341 "AST.ml" 248 7324 7342
type(
  t
)
ident(
  def t "AST.ml" 248 7324 7357 "AST.ml" 248 7324 7383
)
"AST.ml" 248 7324 7332 "AST.ml" 248 7324 7342
type(
  t
)
"AST.ml" 248 7324 7358 "AST.ml" 248 7324 7359
type(
  'e2
)
ident(
  int_ref c "AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
)
"AST.ml" 248 7324 7366 "AST.ml" 248 7324 7367
type(
  t
)
ident(
  int_ref t "AST.ml" 248 7324 7341 "AST.ml" 248 7324 7342
)
"AST.ml" 248 7324 7373 "AST.ml" 248 7324 7374
type(
  t
)
ident(
  int_ref t "AST.ml" 248 7324 7341 "AST.ml" 248 7324 7342
)
"AST.ml" 248 7324 7369 "AST.ml" 248 7324 7374
type(
  t
)
"AST.ml" 248 7324 7361 "AST.ml" 248 7324 7375
type(
  t
)
"AST.ml" 248 7324 7357 "AST.ml" 248 7324 7376
type(
  'e2 * t
)
"AST.ml" 248 7324 7378 "AST.ml" 248 7324 7383
type(
  'f2 * 'g2
)
ident(
  int_ref state "AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
)
"AST.ml" 248 7324 7357 "AST.ml" 248 7324 7383
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 249 7390 7407 "AST.ml" 249 7390 7411
type(
  t
)
"AST.ml" 249 7390 7413 "AST.ml" 249 7390 7417
type(
  t
)
"AST.ml" 249 7390 7398 "AST.ml" 249 7390 7418
type(
  t
)
"AST.ml" 249 7390 7424 "AST.ml" 249 7390 7425
type(
  'e2
)
ident(
  int_ref c "AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
)
"AST.ml" 249 7390 7427 "AST.ml" 249 7390 7431
type(
  t
)
"AST.ml" 249 7390 7423 "AST.ml" 249 7390 7432
type(
  'e2 * t
)
"AST.ml" 249 7390 7434 "AST.ml" 249 7390 7439
type(
  'f2 * 'g2
)
ident(
  int_ref state "AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
)
"AST.ml" 249 7390 7423 "AST.ml" 249 7390 7439
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 250 7440 7457 "AST.ml" 250 7440 7461
type(
  t
)
"AST.ml" 250 7440 7463 "AST.ml" 250 7440 7464
type(
  t
)
ident(
  def t "AST.ml" 250 7440 7473 "AST.ml" 250 7440 7486
)
"AST.ml" 250 7440 7448 "AST.ml" 250 7440 7465
type(
  t
)
"AST.ml" 250 7440 7474 "AST.ml" 250 7440 7475
type(
  'e2
)
ident(
  int_ref c "AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
)
"AST.ml" 250 7440 7477 "AST.ml" 250 7440 7478
type(
  t
)
ident(
  int_ref t "AST.ml" 250 7440 7463 "AST.ml" 250 7440 7464
)
"AST.ml" 250 7440 7473 "AST.ml" 250 7440 7479
type(
  'e2 * t
)
"AST.ml" 250 7440 7481 "AST.ml" 250 7440 7486
type(
  'f2 * 'g2
)
ident(
  int_ref state "AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
)
"AST.ml" 250 7440 7473 "AST.ml" 250 7440 7486
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 261 7787 7795 "AST.ml" 261 7787 7796
type(
  t
)
"AST.ml" 261 7787 7821 "AST.ml" 261 7787 7822
type(
  'e2
)
ident(
  int_ref c "AST.ml" 239 6950 6971 "AST.ml" 239 6950 6972
)
"AST.ml" 261 7787 7824 "AST.ml" 261 7787 7825
type(
  t
)
ident(
  int_ref t "AST.ml" 239 6950 6974 "AST.ml" 239 6950 6975
)
"AST.ml" 261 7787 7820 "AST.ml" 261 7787 7826
type(
  'e2 * t
)
"AST.ml" 261 7787 7828 "AST.ml" 261 7787 7833
type(
  'f2 * 'g2
)
ident(
  int_ref state "AST.ml" 239 6950 6978 "AST.ml" 239 6950 6998
)
"AST.ml" 261 7787 7820 "AST.ml" 261 7787 7833
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 240 7002 7008 "AST.ml" 261 7787 7833
type(
  ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 239 6950 6977 "AST.ml" 261 7787 7833
type(
  'f2 * 'g2 -> ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 239 6950 6970 "AST.ml" 261 7787 7833
type(
  'e2 * t -> 'f2 * 'g2 -> ('e2 * t) * ('f2 * 'g2)
)
"AST.ml" 266 7850 7858 "AST.ml" 266 7850 7866
type(
  string -> (t, Ostap.Msg.t) Checked.t
)
ident(
  int_ref fromFile "AST.ml" 159 4375 4379 "AST.ml" 159 4375 4387
)
"AST.ml" 266 7850 7868 "AST.ml" 266 7850 7877
type(
  string array -> int -> string
)
ident(
  ext_ref Array.get
)
"AST.ml" 266 7850 7878 "AST.ml" 266 7850 7886
type(
  string array
)
ident(
  ext_ref Sys.argv
)
"AST.ml" 266 7850 7887 "AST.ml" 266 7850 7888
type(
  int
)
"AST.ml" 266 7850 7867 "AST.ml" 266 7850 7889
type(
  string
)
"AST.ml" 266 7850 7858 "AST.ml" 266 7850 7889
call(
  stack
)
type(
  (t, Ostap.Msg.t) Checked.t
)
"AST.ml" 267 7895 7910 "AST.ml" 267 7895 7913
type(
  t
)
ident(
  def ast "AST.ml" 268 7918 7924 "AST.ml" 268 7918 7958
)
"AST.ml" 267 7895 7899 "AST.ml" 267 7895 7913
type(
  (t, Ostap.Msg.t) Checked.t
)
"AST.ml" 268 7918 7924 "AST.ml" 268 7918 7937
type(
  (GT.string -> unit, out_channel, unit) format -> GT.string -> unit
)
ident(
  ext_ref Printf.printf
)
"AST.ml" 268 7918 7938 "AST.ml" 268 7918 7944
type(
  (GT.string -> unit, out_channel, unit) format
)
"AST.ml" 268 7918 7946 "AST.ml" 268 7918 7950
type(
  (('_a, '_b) _#t_tt -> '_a -> t -> '_b, < show : t -> GT.string >) GT.t ->
  t -> GT.string
)
ident(
  ext_ref GT.show
)
"AST.ml" 268 7918 7950 "AST.ml" 268 7918 7953
type(
  ((('_a, '_b) _#t_tt as 'c) -> '_a -> t -> '_b, < show : t -> GT.string >)
  GT.t
)
ident(
  int_ref t "AST.ml" 3 9 9 "AST.ml" 33 492 525
)
"AST.ml" 268 7918 7954 "AST.ml" 268 7918 7957
type(
  t
)
ident(
  int_ref ast "AST.ml" 267 7895 7910 "AST.ml" 267 7895 7913
)
"AST.ml" 268 7918 7945 "AST.ml" 268 7918 7958
call(
  stack
)
type(
  GT.string
)
"AST.ml" 268 7918 7924 "AST.ml" 268 7918 7958
call(
  stack
)
type(
  unit
)
"AST.ml" 269 7959 7977 "AST.ml" 269 7959 7978
type(
  Ostap.Msg.t
)
ident(
  def m "AST.ml" 270 7984 7990 "AST.ml" 270 7984 8048
)
"AST.ml" 269 7959 7976 "AST.ml" 269 7959 7979
type(
  Ostap.Msg.t list
)
type(
  Ostap.Msg.t list
)
"AST.ml" 269 7959 7963 "AST.ml" 269 7959 7979
type(
  (t, Ostap.Msg.t) Checked.t
)
"AST.ml" 270 7984 7990 "AST.ml" 270 7984 8004
type(
  (string -> unit, out_channel, unit) format -> string -> unit
)
ident(
  ext_ref Printf.eprintf
)
"AST.ml" 270 7984 8005 "AST.ml" 270 7984 8025
type(
  (string -> unit, out_channel, unit) format
)
"AST.ml" 270 7984 8027 "AST.ml" 270 7984 8045
type(
  Ostap.Msg.t -> string
)
ident(
  ext_ref Ostap.Msg.toString
)
"AST.ml" 270 7984 8046 "AST.ml" 270 7984 8047
type(
  Ostap.Msg.t
)
ident(
  int_ref m "AST.ml" 269 7959 7977 "AST.ml" 269 7959 7978
)
"AST.ml" 270 7984 8026 "AST.ml" 270 7984 8048
call(
  stack
)
type(
  string
)
"AST.ml" 270 7984 7990 "AST.ml" 270 7984 8048
call(
  stack
)
type(
  unit
)
"AST.ml" 266 7850 7852 "AST.ml" 270 7984 8048
type(
  unit
)
